<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qmtec.agent.dao.DataXConfigMapper">
  <resultMap id="BaseResultMap" type="com.qmtec.agent.entity.DataXConfig">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="startup_time" jdbcType="TIMESTAMP" property="startupTime" />
    <result column="json_file_name" jdbcType="VARCHAR" property="jsonFileName" />
    <result column="pythonscript__file_name" jdbcType="VARCHAR" property="pythonscriptFileName" />
    <result column="server_ip" jdbcType="VARCHAR" property="serverIp" />
    <result column="server_port" jdbcType="VARCHAR" property="serverPort" />
    <result column="runState" jdbcType="INTEGER" property="runstate" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="datax_home" jdbcType="VARCHAR" property="dataxHome" />
    <result column="process_pid" jdbcType="INTEGER" property="processPid" />
    <result column="python_switch" jdbcType="BIT" property="pythonSwitch" />
    <result column="json_switch" jdbcType="BIT" property="jsonSwitch" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.qmtec.agent.entity.DataXConfig">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="json_file_content" jdbcType="LONGVARCHAR" property="jsonFileContent" />
    <result column="pythonscript_content" jdbcType="LONGVARCHAR" property="pythonscriptContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, `name`, code, create_time, modify_time, startup_time, json_file_name, pythonscript__file_name, 
    server_ip, server_port, runState, remark, datax_home, process_pid, python_switch, 
    json_switch
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    json_file_content, pythonscript_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.qmtec.agent.entity.example.DataXConfigExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_datax_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.qmtec.agent.entity.example.DataXConfigExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_datax_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from t_datax_config
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_datax_config
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from t_datax_config
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_datax_config
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qmtec.agent.entity.example.DataXConfigExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_datax_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qmtec.agent.entity.DataXConfig">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_datax_config (id, `name`, code, 
      create_time, modify_time, startup_time, 
      json_file_name, pythonscript__file_name, server_ip, 
      server_port, runState, remark, 
      datax_home, process_pid, python_switch, 
      json_switch, json_file_content, pythonscript_content
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{startupTime,jdbcType=TIMESTAMP}, 
      #{jsonFileName,jdbcType=VARCHAR}, #{pythonscriptFileName,jdbcType=VARCHAR}, #{serverIp,jdbcType=VARCHAR}, 
      #{serverPort,jdbcType=VARCHAR}, #{runstate,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{dataxHome,jdbcType=VARCHAR}, #{processPid,jdbcType=INTEGER}, #{pythonSwitch,jdbcType=BIT}, 
      #{jsonSwitch,jdbcType=BIT}, #{jsonFileContent,jdbcType=LONGVARCHAR}, #{pythonscriptContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_datax_config
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.name != null">
            `name`,
          </if>
          <if test="record.code != null">
            code,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.modifyTime != null">
            modify_time,
          </if>
          <if test="record.startupTime != null">
            startup_time,
          </if>
          <if test="record.jsonFileName != null">
            json_file_name,
          </if>
          <if test="record.pythonscriptFileName != null">
            pythonscript__file_name,
          </if>
          <if test="record.serverIp != null">
            server_ip,
          </if>
          <if test="record.serverPort != null">
            server_port,
          </if>
          <if test="record.runstate != null">
            runState,
          </if>
          <if test="record.remark != null">
            remark,
          </if>
          <if test="record.dataxHome != null">
            datax_home,
          </if>
          <if test="record.processPid != null">
            process_pid,
          </if>
          <if test="record.pythonSwitch != null">
            python_switch,
          </if>
          <if test="record.jsonSwitch != null">
            json_switch,
          </if>
          <if test="record.jsonFileContent != null">
            json_file_content,
          </if>
          <if test="record.pythonscriptContent != null">
            pythonscript_content,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.code != null">
            #{record.code,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.modifyTime != null">
            #{record.modifyTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.startupTime != null">
            #{record.startupTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.jsonFileName != null">
            #{record.jsonFileName,jdbcType=VARCHAR},
          </if>
          <if test="record.pythonscriptFileName != null">
            #{record.pythonscriptFileName,jdbcType=VARCHAR},
          </if>
          <if test="record.serverIp != null">
            #{record.serverIp,jdbcType=VARCHAR},
          </if>
          <if test="record.serverPort != null">
            #{record.serverPort,jdbcType=VARCHAR},
          </if>
          <if test="record.runstate != null">
            #{record.runstate,jdbcType=INTEGER},
          </if>
          <if test="record.remark != null">
            #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.dataxHome != null">
            #{record.dataxHome,jdbcType=VARCHAR},
          </if>
          <if test="record.processPid != null">
            #{record.processPid,jdbcType=INTEGER},
          </if>
          <if test="record.pythonSwitch != null">
            #{record.pythonSwitch,jdbcType=BIT},
          </if>
          <if test="record.jsonSwitch != null">
            #{record.jsonSwitch,jdbcType=BIT},
          </if>
          <if test="record.jsonFileContent != null">
            #{record.jsonFileContent,jdbcType=LONGVARCHAR},
          </if>
          <if test="record.pythonscriptContent != null">
            #{record.pythonscriptContent,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.qmtec.agent.entity.example.DataXConfigExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from t_datax_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_datax_config
    SET
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            `name` = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.code != null">
            code = #{record.code,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.modifyTime != null">
            modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.startupTime != null">
            startup_time = #{record.startupTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.jsonFileName != null">
            json_file_name = #{record.jsonFileName,jdbcType=VARCHAR},
          </if>
          <if test="record.pythonscriptFileName != null">
            pythonscript__file_name = #{record.pythonscriptFileName,jdbcType=VARCHAR},
          </if>
          <if test="record.serverIp != null">
            server_ip = #{record.serverIp,jdbcType=VARCHAR},
          </if>
          <if test="record.serverPort != null">
            server_port = #{record.serverPort,jdbcType=VARCHAR},
          </if>
          <if test="record.runstate != null">
            runState = #{record.runstate,jdbcType=INTEGER},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.dataxHome != null">
            datax_home = #{record.dataxHome,jdbcType=VARCHAR},
          </if>
          <if test="record.processPid != null">
            process_pid = #{record.processPid,jdbcType=INTEGER},
          </if>
          <if test="record.pythonSwitch != null">
            python_switch = #{record.pythonSwitch,jdbcType=BIT},
          </if>
          <if test="record.jsonSwitch != null">
            json_switch = #{record.jsonSwitch,jdbcType=BIT},
          </if>
          <if test="record.jsonFileContent != null">
            json_file_content = #{record.jsonFileContent,jdbcType=LONGVARCHAR},
          </if>
          <if test="record.pythonscriptContent != null">
            pythonscript_content = #{record.pythonscriptContent,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_datax_config
    set id = #{record.id,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      startup_time = #{record.startupTime,jdbcType=TIMESTAMP},
      json_file_name = #{record.jsonFileName,jdbcType=VARCHAR},
      pythonscript__file_name = #{record.pythonscriptFileName,jdbcType=VARCHAR},
      server_ip = #{record.serverIp,jdbcType=VARCHAR},
      server_port = #{record.serverPort,jdbcType=VARCHAR},
      runState = #{record.runstate,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      datax_home = #{record.dataxHome,jdbcType=VARCHAR},
      process_pid = #{record.processPid,jdbcType=INTEGER},
      python_switch = #{record.pythonSwitch,jdbcType=BIT},
      json_switch = #{record.jsonSwitch,jdbcType=BIT},
      json_file_content = #{record.jsonFileContent,jdbcType=LONGVARCHAR},
      pythonscript_content = #{record.pythonscriptContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_datax_config
    set id = #{record.id,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      startup_time = #{record.startupTime,jdbcType=TIMESTAMP},
      json_file_name = #{record.jsonFileName,jdbcType=VARCHAR},
      pythonscript__file_name = #{record.pythonscriptFileName,jdbcType=VARCHAR},
      server_ip = #{record.serverIp,jdbcType=VARCHAR},
      server_port = #{record.serverPort,jdbcType=VARCHAR},
      runState = #{record.runstate,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      datax_home = #{record.dataxHome,jdbcType=VARCHAR},
      process_pid = #{record.processPid,jdbcType=INTEGER},
      python_switch = #{record.pythonSwitch,jdbcType=BIT},
      json_switch = #{record.jsonSwitch,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_datax_config
    SET
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.name != null">
            `name` = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.code != null">
            code = #{record.code,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.modifyTime != null">
            modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.startupTime != null">
            startup_time = #{record.startupTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.jsonFileName != null">
            json_file_name = #{record.jsonFileName,jdbcType=VARCHAR},
          </if>
          <if test="record.pythonscriptFileName != null">
            pythonscript__file_name = #{record.pythonscriptFileName,jdbcType=VARCHAR},
          </if>
          <if test="record.serverIp != null">
            server_ip = #{record.serverIp,jdbcType=VARCHAR},
          </if>
          <if test="record.serverPort != null">
            server_port = #{record.serverPort,jdbcType=VARCHAR},
          </if>
          <if test="record.runstate != null">
            runState = #{record.runstate,jdbcType=INTEGER},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.dataxHome != null">
            datax_home = #{record.dataxHome,jdbcType=VARCHAR},
          </if>
          <if test="record.processPid != null">
            process_pid = #{record.processPid,jdbcType=INTEGER},
          </if>
          <if test="record.pythonSwitch != null">
            python_switch = #{record.pythonSwitch,jdbcType=BIT},
          </if>
          <if test="record.jsonSwitch != null">
            json_switch = #{record.jsonSwitch,jdbcType=BIT},
          </if>
          <if test="record.jsonFileContent != null">
            json_file_content = #{record.jsonFileContent,jdbcType=LONGVARCHAR},
          </if>
          <if test="record.pythonscriptContent != null">
            pythonscript_content = #{record.pythonscriptContent,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qmtec.agent.entity.DataXConfig">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_datax_config
    set `name` = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      startup_time = #{startupTime,jdbcType=TIMESTAMP},
      json_file_name = #{jsonFileName,jdbcType=VARCHAR},
      pythonscript__file_name = #{pythonscriptFileName,jdbcType=VARCHAR},
      server_ip = #{serverIp,jdbcType=VARCHAR},
      server_port = #{serverPort,jdbcType=VARCHAR},
      runState = #{runstate,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      datax_home = #{dataxHome,jdbcType=VARCHAR},
      process_pid = #{processPid,jdbcType=INTEGER},
      python_switch = #{pythonSwitch,jdbcType=BIT},
      json_switch = #{jsonSwitch,jdbcType=BIT},
      json_file_content = #{jsonFileContent,jdbcType=LONGVARCHAR},
      pythonscript_content = #{pythonscriptContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qmtec.agent.entity.DataXConfig">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_datax_config
    set `name` = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      startup_time = #{startupTime,jdbcType=TIMESTAMP},
      json_file_name = #{jsonFileName,jdbcType=VARCHAR},
      pythonscript__file_name = #{pythonscriptFileName,jdbcType=VARCHAR},
      server_ip = #{serverIp,jdbcType=VARCHAR},
      server_port = #{serverPort,jdbcType=VARCHAR},
      runState = #{runstate,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      datax_home = #{dataxHome,jdbcType=VARCHAR},
      process_pid = #{processPid,jdbcType=INTEGER},
      python_switch = #{pythonSwitch,jdbcType=BIT},
      json_switch = #{jsonSwitch,jdbcType=BIT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectOneByExample" parameterType="com.qmtec.agent.entity.example.DataXConfigExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_datax_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleWithBLOBs" parameterType="com.qmtec.agent.entity.example.DataXConfigExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_datax_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from t_datax_config
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>