package com.qmtec.servicecore.entity.example;

import com.qmtec.servicecore.entity.TbDBS;
import java.util.ArrayList;
import java.util.List;

public class TbDBSExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DBS
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DBS
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DBS
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DBS
     *
     * @mbg.generated
     */
    protected Integer offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DBS
     *
     * @mbg.generated
     */
    protected Integer rows;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public TbDBSExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public TbDBSExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public TbDBSExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        rows = null;
        offset = null;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TbDBSExample example = new TbDBSExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public TbDBSExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public TbDBSExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public void setRows(Integer rows) {
        this.rows = rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public Integer getRows() {
        return this.rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public TbDBSExample limit(Integer rows) {
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public TbDBSExample limit(Integer offset, Integer rows) {
        this.offset = offset;
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public TbDBSExample page(Integer page, Integer pageSize) {
        this.offset = page * pageSize;
        this.rows = pageSize;
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DBS
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDbIdIsNull() {
            addCriterion("DB_ID is null");
            return (Criteria) this;
        }

        public Criteria andDbIdIsNotNull() {
            addCriterion("DB_ID is not null");
            return (Criteria) this;
        }

        public Criteria andDbIdEqualTo(Long value) {
            addCriterion("DB_ID =", value, "dbId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDbIdEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("DB_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbIdNotEqualTo(Long value) {
            addCriterion("DB_ID <>", value, "dbId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDbIdNotEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("DB_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbIdGreaterThan(Long value) {
            addCriterion("DB_ID >", value, "dbId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDbIdGreaterThanColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("DB_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbIdGreaterThanOrEqualTo(Long value) {
            addCriterion("DB_ID >=", value, "dbId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDbIdGreaterThanOrEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("DB_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbIdLessThan(Long value) {
            addCriterion("DB_ID <", value, "dbId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDbIdLessThanColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("DB_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbIdLessThanOrEqualTo(Long value) {
            addCriterion("DB_ID <=", value, "dbId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDbIdLessThanOrEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("DB_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbIdIn(List<Long> values) {
            addCriterion("DB_ID in", values, "dbId");
            return (Criteria) this;
        }

        public Criteria andDbIdNotIn(List<Long> values) {
            addCriterion("DB_ID not in", values, "dbId");
            return (Criteria) this;
        }

        public Criteria andDbIdBetween(Long value1, Long value2) {
            addCriterion("DB_ID between", value1, value2, "dbId");
            return (Criteria) this;
        }

        public Criteria andDbIdNotBetween(Long value1, Long value2) {
            addCriterion("DB_ID not between", value1, value2, "dbId");
            return (Criteria) this;
        }

        public Criteria andDescIsNull() {
            addCriterion("`DESC` is null");
            return (Criteria) this;
        }

        public Criteria andDescIsNotNull() {
            addCriterion("`DESC` is not null");
            return (Criteria) this;
        }

        public Criteria andDescEqualTo(String value) {
            addCriterion("`DESC` =", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDescEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("`DESC` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescNotEqualTo(String value) {
            addCriterion("`DESC` <>", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDescNotEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("`DESC` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescGreaterThan(String value) {
            addCriterion("`DESC` >", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDescGreaterThanColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("`DESC` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescGreaterThanOrEqualTo(String value) {
            addCriterion("`DESC` >=", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDescGreaterThanOrEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("`DESC` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescLessThan(String value) {
            addCriterion("`DESC` <", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDescLessThanColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("`DESC` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescLessThanOrEqualTo(String value) {
            addCriterion("`DESC` <=", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDescLessThanOrEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("`DESC` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescLike(String value) {
            addCriterion("`DESC` like", value, "desc");
            return (Criteria) this;
        }

        public Criteria andDescNotLike(String value) {
            addCriterion("`DESC` not like", value, "desc");
            return (Criteria) this;
        }

        public Criteria andDescIn(List<String> values) {
            addCriterion("`DESC` in", values, "desc");
            return (Criteria) this;
        }

        public Criteria andDescNotIn(List<String> values) {
            addCriterion("`DESC` not in", values, "desc");
            return (Criteria) this;
        }

        public Criteria andDescBetween(String value1, String value2) {
            addCriterion("`DESC` between", value1, value2, "desc");
            return (Criteria) this;
        }

        public Criteria andDescNotBetween(String value1, String value2) {
            addCriterion("`DESC` not between", value1, value2, "desc");
            return (Criteria) this;
        }

        public Criteria andDbLocationUriIsNull() {
            addCriterion("DB_LOCATION_URI is null");
            return (Criteria) this;
        }

        public Criteria andDbLocationUriIsNotNull() {
            addCriterion("DB_LOCATION_URI is not null");
            return (Criteria) this;
        }

        public Criteria andDbLocationUriEqualTo(String value) {
            addCriterion("DB_LOCATION_URI =", value, "dbLocationUri");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDbLocationUriEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("DB_LOCATION_URI = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbLocationUriNotEqualTo(String value) {
            addCriterion("DB_LOCATION_URI <>", value, "dbLocationUri");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDbLocationUriNotEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("DB_LOCATION_URI <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbLocationUriGreaterThan(String value) {
            addCriterion("DB_LOCATION_URI >", value, "dbLocationUri");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDbLocationUriGreaterThanColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("DB_LOCATION_URI > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbLocationUriGreaterThanOrEqualTo(String value) {
            addCriterion("DB_LOCATION_URI >=", value, "dbLocationUri");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDbLocationUriGreaterThanOrEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("DB_LOCATION_URI >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbLocationUriLessThan(String value) {
            addCriterion("DB_LOCATION_URI <", value, "dbLocationUri");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDbLocationUriLessThanColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("DB_LOCATION_URI < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbLocationUriLessThanOrEqualTo(String value) {
            addCriterion("DB_LOCATION_URI <=", value, "dbLocationUri");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andDbLocationUriLessThanOrEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("DB_LOCATION_URI <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbLocationUriLike(String value) {
            addCriterion("DB_LOCATION_URI like", value, "dbLocationUri");
            return (Criteria) this;
        }

        public Criteria andDbLocationUriNotLike(String value) {
            addCriterion("DB_LOCATION_URI not like", value, "dbLocationUri");
            return (Criteria) this;
        }

        public Criteria andDbLocationUriIn(List<String> values) {
            addCriterion("DB_LOCATION_URI in", values, "dbLocationUri");
            return (Criteria) this;
        }

        public Criteria andDbLocationUriNotIn(List<String> values) {
            addCriterion("DB_LOCATION_URI not in", values, "dbLocationUri");
            return (Criteria) this;
        }

        public Criteria andDbLocationUriBetween(String value1, String value2) {
            addCriterion("DB_LOCATION_URI between", value1, value2, "dbLocationUri");
            return (Criteria) this;
        }

        public Criteria andDbLocationUriNotBetween(String value1, String value2) {
            addCriterion("DB_LOCATION_URI not between", value1, value2, "dbLocationUri");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`NAME` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`NAME` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`NAME` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("`NAME` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`NAME` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("`NAME` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`NAME` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("`NAME` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`NAME` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("`NAME` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`NAME` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("`NAME` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`NAME` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("`NAME` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`NAME` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`NAME` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`NAME` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`NAME` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`NAME` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`NAME` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andOwnerNameIsNull() {
            addCriterion("OWNER_NAME is null");
            return (Criteria) this;
        }

        public Criteria andOwnerNameIsNotNull() {
            addCriterion("OWNER_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andOwnerNameEqualTo(String value) {
            addCriterion("OWNER_NAME =", value, "ownerName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andOwnerNameEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("OWNER_NAME = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerNameNotEqualTo(String value) {
            addCriterion("OWNER_NAME <>", value, "ownerName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andOwnerNameNotEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("OWNER_NAME <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerNameGreaterThan(String value) {
            addCriterion("OWNER_NAME >", value, "ownerName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andOwnerNameGreaterThanColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("OWNER_NAME > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerNameGreaterThanOrEqualTo(String value) {
            addCriterion("OWNER_NAME >=", value, "ownerName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andOwnerNameGreaterThanOrEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("OWNER_NAME >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerNameLessThan(String value) {
            addCriterion("OWNER_NAME <", value, "ownerName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andOwnerNameLessThanColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("OWNER_NAME < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerNameLessThanOrEqualTo(String value) {
            addCriterion("OWNER_NAME <=", value, "ownerName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andOwnerNameLessThanOrEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("OWNER_NAME <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerNameLike(String value) {
            addCriterion("OWNER_NAME like", value, "ownerName");
            return (Criteria) this;
        }

        public Criteria andOwnerNameNotLike(String value) {
            addCriterion("OWNER_NAME not like", value, "ownerName");
            return (Criteria) this;
        }

        public Criteria andOwnerNameIn(List<String> values) {
            addCriterion("OWNER_NAME in", values, "ownerName");
            return (Criteria) this;
        }

        public Criteria andOwnerNameNotIn(List<String> values) {
            addCriterion("OWNER_NAME not in", values, "ownerName");
            return (Criteria) this;
        }

        public Criteria andOwnerNameBetween(String value1, String value2) {
            addCriterion("OWNER_NAME between", value1, value2, "ownerName");
            return (Criteria) this;
        }

        public Criteria andOwnerNameNotBetween(String value1, String value2) {
            addCriterion("OWNER_NAME not between", value1, value2, "ownerName");
            return (Criteria) this;
        }

        public Criteria andOwnerTypeIsNull() {
            addCriterion("OWNER_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andOwnerTypeIsNotNull() {
            addCriterion("OWNER_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andOwnerTypeEqualTo(String value) {
            addCriterion("OWNER_TYPE =", value, "ownerType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andOwnerTypeEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("OWNER_TYPE = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerTypeNotEqualTo(String value) {
            addCriterion("OWNER_TYPE <>", value, "ownerType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andOwnerTypeNotEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("OWNER_TYPE <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerTypeGreaterThan(String value) {
            addCriterion("OWNER_TYPE >", value, "ownerType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andOwnerTypeGreaterThanColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("OWNER_TYPE > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerTypeGreaterThanOrEqualTo(String value) {
            addCriterion("OWNER_TYPE >=", value, "ownerType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andOwnerTypeGreaterThanOrEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("OWNER_TYPE >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerTypeLessThan(String value) {
            addCriterion("OWNER_TYPE <", value, "ownerType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andOwnerTypeLessThanColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("OWNER_TYPE < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerTypeLessThanOrEqualTo(String value) {
            addCriterion("OWNER_TYPE <=", value, "ownerType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andOwnerTypeLessThanOrEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("OWNER_TYPE <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerTypeLike(String value) {
            addCriterion("OWNER_TYPE like", value, "ownerType");
            return (Criteria) this;
        }

        public Criteria andOwnerTypeNotLike(String value) {
            addCriterion("OWNER_TYPE not like", value, "ownerType");
            return (Criteria) this;
        }

        public Criteria andOwnerTypeIn(List<String> values) {
            addCriterion("OWNER_TYPE in", values, "ownerType");
            return (Criteria) this;
        }

        public Criteria andOwnerTypeNotIn(List<String> values) {
            addCriterion("OWNER_TYPE not in", values, "ownerType");
            return (Criteria) this;
        }

        public Criteria andOwnerTypeBetween(String value1, String value2) {
            addCriterion("OWNER_TYPE between", value1, value2, "ownerType");
            return (Criteria) this;
        }

        public Criteria andOwnerTypeNotBetween(String value1, String value2) {
            addCriterion("OWNER_TYPE not between", value1, value2, "ownerType");
            return (Criteria) this;
        }

        public Criteria andCtlgNameIsNull() {
            addCriterion("CTLG_NAME is null");
            return (Criteria) this;
        }

        public Criteria andCtlgNameIsNotNull() {
            addCriterion("CTLG_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andCtlgNameEqualTo(String value) {
            addCriterion("CTLG_NAME =", value, "ctlgName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andCtlgNameEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("CTLG_NAME = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCtlgNameNotEqualTo(String value) {
            addCriterion("CTLG_NAME <>", value, "ctlgName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andCtlgNameNotEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("CTLG_NAME <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCtlgNameGreaterThan(String value) {
            addCriterion("CTLG_NAME >", value, "ctlgName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andCtlgNameGreaterThanColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("CTLG_NAME > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCtlgNameGreaterThanOrEqualTo(String value) {
            addCriterion("CTLG_NAME >=", value, "ctlgName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andCtlgNameGreaterThanOrEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("CTLG_NAME >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCtlgNameLessThan(String value) {
            addCriterion("CTLG_NAME <", value, "ctlgName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andCtlgNameLessThanColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("CTLG_NAME < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCtlgNameLessThanOrEqualTo(String value) {
            addCriterion("CTLG_NAME <=", value, "ctlgName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria andCtlgNameLessThanOrEqualToColumn(TbDBS.Column column) {
            addCriterion(new StringBuilder("CTLG_NAME <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCtlgNameLike(String value) {
            addCriterion("CTLG_NAME like", value, "ctlgName");
            return (Criteria) this;
        }

        public Criteria andCtlgNameNotLike(String value) {
            addCriterion("CTLG_NAME not like", value, "ctlgName");
            return (Criteria) this;
        }

        public Criteria andCtlgNameIn(List<String> values) {
            addCriterion("CTLG_NAME in", values, "ctlgName");
            return (Criteria) this;
        }

        public Criteria andCtlgNameNotIn(List<String> values) {
            addCriterion("CTLG_NAME not in", values, "ctlgName");
            return (Criteria) this;
        }

        public Criteria andCtlgNameBetween(String value1, String value2) {
            addCriterion("CTLG_NAME between", value1, value2, "ctlgName");
            return (Criteria) this;
        }

        public Criteria andCtlgNameNotBetween(String value1, String value2) {
            addCriterion("CTLG_NAME not between", value1, value2, "ctlgName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DBS
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table DBS
         *
         * @mbg.generated
         */
        private TbDBSExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        protected Criteria(TbDBSExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public TbDBSExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DBS
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table DBS
         *
         * @mbg.generated
         */
        void example(com.qmtec.servicecore.entity.example.TbDBSExample example);
    }
}