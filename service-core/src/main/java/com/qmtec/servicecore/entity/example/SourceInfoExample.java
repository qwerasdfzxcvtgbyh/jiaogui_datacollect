package com.qmtec.servicecore.entity.example;

import com.qmtec.servicecore.entity.SourceInfo;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SourceInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    protected Integer offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    protected Integer rows;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public SourceInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public SourceInfoExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public SourceInfoExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        rows = null;
        offset = null;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        SourceInfoExample example = new SourceInfoExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public SourceInfoExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public SourceInfoExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public void setRows(Integer rows) {
        this.rows = rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public Integer getRows() {
        return this.rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public SourceInfoExample limit(Integer rows) {
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public SourceInfoExample limit(Integer offset, Integer rows) {
        this.offset = offset;
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public SourceInfoExample page(Integer page, Integer pageSize) {
        this.offset = page * pageSize;
        this.rows = pageSize;
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andComponentNameIsNull() {
            addCriterion("component_name is null");
            return (Criteria) this;
        }

        public Criteria andComponentNameIsNotNull() {
            addCriterion("component_name is not null");
            return (Criteria) this;
        }

        public Criteria andComponentNameEqualTo(String value) {
            addCriterion("component_name =", value, "componentName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andComponentNameEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("component_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComponentNameNotEqualTo(String value) {
            addCriterion("component_name <>", value, "componentName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andComponentNameNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("component_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComponentNameGreaterThan(String value) {
            addCriterion("component_name >", value, "componentName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andComponentNameGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("component_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComponentNameGreaterThanOrEqualTo(String value) {
            addCriterion("component_name >=", value, "componentName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andComponentNameGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("component_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComponentNameLessThan(String value) {
            addCriterion("component_name <", value, "componentName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andComponentNameLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("component_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComponentNameLessThanOrEqualTo(String value) {
            addCriterion("component_name <=", value, "componentName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andComponentNameLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("component_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComponentNameLike(String value) {
            addCriterion("component_name like", value, "componentName");
            return (Criteria) this;
        }

        public Criteria andComponentNameNotLike(String value) {
            addCriterion("component_name not like", value, "componentName");
            return (Criteria) this;
        }

        public Criteria andComponentNameIn(List<String> values) {
            addCriterion("component_name in", values, "componentName");
            return (Criteria) this;
        }

        public Criteria andComponentNameNotIn(List<String> values) {
            addCriterion("component_name not in", values, "componentName");
            return (Criteria) this;
        }

        public Criteria andComponentNameBetween(String value1, String value2) {
            addCriterion("component_name between", value1, value2, "componentName");
            return (Criteria) this;
        }

        public Criteria andComponentNameNotBetween(String value1, String value2) {
            addCriterion("component_name not between", value1, value2, "componentName");
            return (Criteria) this;
        }

        public Criteria andIpAddrIsNull() {
            addCriterion("ip_addr is null");
            return (Criteria) this;
        }

        public Criteria andIpAddrIsNotNull() {
            addCriterion("ip_addr is not null");
            return (Criteria) this;
        }

        public Criteria andIpAddrEqualTo(String value) {
            addCriterion("ip_addr =", value, "ipAddr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andIpAddrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("ip_addr = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIpAddrNotEqualTo(String value) {
            addCriterion("ip_addr <>", value, "ipAddr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andIpAddrNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("ip_addr <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIpAddrGreaterThan(String value) {
            addCriterion("ip_addr >", value, "ipAddr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andIpAddrGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("ip_addr > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIpAddrGreaterThanOrEqualTo(String value) {
            addCriterion("ip_addr >=", value, "ipAddr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andIpAddrGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("ip_addr >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIpAddrLessThan(String value) {
            addCriterion("ip_addr <", value, "ipAddr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andIpAddrLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("ip_addr < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIpAddrLessThanOrEqualTo(String value) {
            addCriterion("ip_addr <=", value, "ipAddr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andIpAddrLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("ip_addr <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIpAddrLike(String value) {
            addCriterion("ip_addr like", value, "ipAddr");
            return (Criteria) this;
        }

        public Criteria andIpAddrNotLike(String value) {
            addCriterion("ip_addr not like", value, "ipAddr");
            return (Criteria) this;
        }

        public Criteria andIpAddrIn(List<String> values) {
            addCriterion("ip_addr in", values, "ipAddr");
            return (Criteria) this;
        }

        public Criteria andIpAddrNotIn(List<String> values) {
            addCriterion("ip_addr not in", values, "ipAddr");
            return (Criteria) this;
        }

        public Criteria andIpAddrBetween(String value1, String value2) {
            addCriterion("ip_addr between", value1, value2, "ipAddr");
            return (Criteria) this;
        }

        public Criteria andIpAddrNotBetween(String value1, String value2) {
            addCriterion("ip_addr not between", value1, value2, "ipAddr");
            return (Criteria) this;
        }

        public Criteria andCurrentThroughputIsNull() {
            addCriterion("current_throughput is null");
            return (Criteria) this;
        }

        public Criteria andCurrentThroughputIsNotNull() {
            addCriterion("current_throughput is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentThroughputEqualTo(String value) {
            addCriterion("current_throughput =", value, "currentThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andCurrentThroughputEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("current_throughput = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentThroughputNotEqualTo(String value) {
            addCriterion("current_throughput <>", value, "currentThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andCurrentThroughputNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("current_throughput <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentThroughputGreaterThan(String value) {
            addCriterion("current_throughput >", value, "currentThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andCurrentThroughputGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("current_throughput > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentThroughputGreaterThanOrEqualTo(String value) {
            addCriterion("current_throughput >=", value, "currentThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andCurrentThroughputGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("current_throughput >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentThroughputLessThan(String value) {
            addCriterion("current_throughput <", value, "currentThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andCurrentThroughputLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("current_throughput < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentThroughputLessThanOrEqualTo(String value) {
            addCriterion("current_throughput <=", value, "currentThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andCurrentThroughputLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("current_throughput <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentThroughputLike(String value) {
            addCriterion("current_throughput like", value, "currentThroughput");
            return (Criteria) this;
        }

        public Criteria andCurrentThroughputNotLike(String value) {
            addCriterion("current_throughput not like", value, "currentThroughput");
            return (Criteria) this;
        }

        public Criteria andCurrentThroughputIn(List<String> values) {
            addCriterion("current_throughput in", values, "currentThroughput");
            return (Criteria) this;
        }

        public Criteria andCurrentThroughputNotIn(List<String> values) {
            addCriterion("current_throughput not in", values, "currentThroughput");
            return (Criteria) this;
        }

        public Criteria andCurrentThroughputBetween(String value1, String value2) {
            addCriterion("current_throughput between", value1, value2, "currentThroughput");
            return (Criteria) this;
        }

        public Criteria andCurrentThroughputNotBetween(String value1, String value2) {
            addCriterion("current_throughput not between", value1, value2, "currentThroughput");
            return (Criteria) this;
        }

        public Criteria andMaxThroughputIsNull() {
            addCriterion("max_throughput is null");
            return (Criteria) this;
        }

        public Criteria andMaxThroughputIsNotNull() {
            addCriterion("max_throughput is not null");
            return (Criteria) this;
        }

        public Criteria andMaxThroughputEqualTo(String value) {
            addCriterion("max_throughput =", value, "maxThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andMaxThroughputEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("max_throughput = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaxThroughputNotEqualTo(String value) {
            addCriterion("max_throughput <>", value, "maxThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andMaxThroughputNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("max_throughput <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaxThroughputGreaterThan(String value) {
            addCriterion("max_throughput >", value, "maxThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andMaxThroughputGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("max_throughput > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaxThroughputGreaterThanOrEqualTo(String value) {
            addCriterion("max_throughput >=", value, "maxThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andMaxThroughputGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("max_throughput >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaxThroughputLessThan(String value) {
            addCriterion("max_throughput <", value, "maxThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andMaxThroughputLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("max_throughput < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaxThroughputLessThanOrEqualTo(String value) {
            addCriterion("max_throughput <=", value, "maxThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andMaxThroughputLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("max_throughput <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaxThroughputLike(String value) {
            addCriterion("max_throughput like", value, "maxThroughput");
            return (Criteria) this;
        }

        public Criteria andMaxThroughputNotLike(String value) {
            addCriterion("max_throughput not like", value, "maxThroughput");
            return (Criteria) this;
        }

        public Criteria andMaxThroughputIn(List<String> values) {
            addCriterion("max_throughput in", values, "maxThroughput");
            return (Criteria) this;
        }

        public Criteria andMaxThroughputNotIn(List<String> values) {
            addCriterion("max_throughput not in", values, "maxThroughput");
            return (Criteria) this;
        }

        public Criteria andMaxThroughputBetween(String value1, String value2) {
            addCriterion("max_throughput between", value1, value2, "maxThroughput");
            return (Criteria) this;
        }

        public Criteria andMaxThroughputNotBetween(String value1, String value2) {
            addCriterion("max_throughput not between", value1, value2, "maxThroughput");
            return (Criteria) this;
        }

        public Criteria andEventCountIsNull() {
            addCriterion("event_count is null");
            return (Criteria) this;
        }

        public Criteria andEventCountIsNotNull() {
            addCriterion("event_count is not null");
            return (Criteria) this;
        }

        public Criteria andEventCountEqualTo(String value) {
            addCriterion("event_count =", value, "eventCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventCountEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_count = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventCountNotEqualTo(String value) {
            addCriterion("event_count <>", value, "eventCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventCountNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_count <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventCountGreaterThan(String value) {
            addCriterion("event_count >", value, "eventCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventCountGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_count > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventCountGreaterThanOrEqualTo(String value) {
            addCriterion("event_count >=", value, "eventCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventCountGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_count >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventCountLessThan(String value) {
            addCriterion("event_count <", value, "eventCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventCountLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_count < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventCountLessThanOrEqualTo(String value) {
            addCriterion("event_count <=", value, "eventCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventCountLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_count <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventCountLike(String value) {
            addCriterion("event_count like", value, "eventCount");
            return (Criteria) this;
        }

        public Criteria andEventCountNotLike(String value) {
            addCriterion("event_count not like", value, "eventCount");
            return (Criteria) this;
        }

        public Criteria andEventCountIn(List<String> values) {
            addCriterion("event_count in", values, "eventCount");
            return (Criteria) this;
        }

        public Criteria andEventCountNotIn(List<String> values) {
            addCriterion("event_count not in", values, "eventCount");
            return (Criteria) this;
        }

        public Criteria andEventCountBetween(String value1, String value2) {
            addCriterion("event_count between", value1, value2, "eventCount");
            return (Criteria) this;
        }

        public Criteria andEventCountNotBetween(String value1, String value2) {
            addCriterion("event_count not between", value1, value2, "eventCount");
            return (Criteria) this;
        }

        public Criteria andAverageThroughputIsNull() {
            addCriterion("average_throughput is null");
            return (Criteria) this;
        }

        public Criteria andAverageThroughputIsNotNull() {
            addCriterion("average_throughput is not null");
            return (Criteria) this;
        }

        public Criteria andAverageThroughputEqualTo(String value) {
            addCriterion("average_throughput =", value, "averageThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAverageThroughputEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("average_throughput = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAverageThroughputNotEqualTo(String value) {
            addCriterion("average_throughput <>", value, "averageThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAverageThroughputNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("average_throughput <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAverageThroughputGreaterThan(String value) {
            addCriterion("average_throughput >", value, "averageThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAverageThroughputGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("average_throughput > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAverageThroughputGreaterThanOrEqualTo(String value) {
            addCriterion("average_throughput >=", value, "averageThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAverageThroughputGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("average_throughput >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAverageThroughputLessThan(String value) {
            addCriterion("average_throughput <", value, "averageThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAverageThroughputLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("average_throughput < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAverageThroughputLessThanOrEqualTo(String value) {
            addCriterion("average_throughput <=", value, "averageThroughput");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAverageThroughputLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("average_throughput <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAverageThroughputLike(String value) {
            addCriterion("average_throughput like", value, "averageThroughput");
            return (Criteria) this;
        }

        public Criteria andAverageThroughputNotLike(String value) {
            addCriterion("average_throughput not like", value, "averageThroughput");
            return (Criteria) this;
        }

        public Criteria andAverageThroughputIn(List<String> values) {
            addCriterion("average_throughput in", values, "averageThroughput");
            return (Criteria) this;
        }

        public Criteria andAverageThroughputNotIn(List<String> values) {
            addCriterion("average_throughput not in", values, "averageThroughput");
            return (Criteria) this;
        }

        public Criteria andAverageThroughputBetween(String value1, String value2) {
            addCriterion("average_throughput between", value1, value2, "averageThroughput");
            return (Criteria) this;
        }

        public Criteria andAverageThroughputNotBetween(String value1, String value2) {
            addCriterion("average_throughput not between", value1, value2, "averageThroughput");
            return (Criteria) this;
        }

        public Criteria andRunStateIsNull() {
            addCriterion("run_state is null");
            return (Criteria) this;
        }

        public Criteria andRunStateIsNotNull() {
            addCriterion("run_state is not null");
            return (Criteria) this;
        }

        public Criteria andRunStateEqualTo(Integer value) {
            addCriterion("run_state =", value, "runState");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andRunStateEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("run_state = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRunStateNotEqualTo(Integer value) {
            addCriterion("run_state <>", value, "runState");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andRunStateNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("run_state <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRunStateGreaterThan(Integer value) {
            addCriterion("run_state >", value, "runState");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andRunStateGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("run_state > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRunStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("run_state >=", value, "runState");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andRunStateGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("run_state >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRunStateLessThan(Integer value) {
            addCriterion("run_state <", value, "runState");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andRunStateLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("run_state < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRunStateLessThanOrEqualTo(Integer value) {
            addCriterion("run_state <=", value, "runState");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andRunStateLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("run_state <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRunStateIn(List<Integer> values) {
            addCriterion("run_state in", values, "runState");
            return (Criteria) this;
        }

        public Criteria andRunStateNotIn(List<Integer> values) {
            addCriterion("run_state not in", values, "runState");
            return (Criteria) this;
        }

        public Criteria andRunStateBetween(Integer value1, Integer value2) {
            addCriterion("run_state between", value1, value2, "runState");
            return (Criteria) this;
        }

        public Criteria andRunStateNotBetween(Integer value1, Integer value2) {
            addCriterion("run_state not between", value1, value2, "runState");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagIsNull() {
            addCriterion("delete_flag is null");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagIsNotNull() {
            addCriterion("delete_flag is not null");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagEqualTo(Integer value) {
            addCriterion("delete_flag =", value, "deleteFlag");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andDeleteFlagEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("delete_flag = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteFlagNotEqualTo(Integer value) {
            addCriterion("delete_flag <>", value, "deleteFlag");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andDeleteFlagNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("delete_flag <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteFlagGreaterThan(Integer value) {
            addCriterion("delete_flag >", value, "deleteFlag");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andDeleteFlagGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("delete_flag > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteFlagGreaterThanOrEqualTo(Integer value) {
            addCriterion("delete_flag >=", value, "deleteFlag");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andDeleteFlagGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("delete_flag >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteFlagLessThan(Integer value) {
            addCriterion("delete_flag <", value, "deleteFlag");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andDeleteFlagLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("delete_flag < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteFlagLessThanOrEqualTo(Integer value) {
            addCriterion("delete_flag <=", value, "deleteFlag");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andDeleteFlagLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("delete_flag <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteFlagIn(List<Integer> values) {
            addCriterion("delete_flag in", values, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagNotIn(List<Integer> values) {
            addCriterion("delete_flag not in", values, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagBetween(Integer value1, Integer value2) {
            addCriterion("delete_flag between", value1, value2, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagNotBetween(Integer value1, Integer value2) {
            addCriterion("delete_flag not between", value1, value2, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(Date value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(Date value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(Date value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(Date value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(Date value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<Date> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<Date> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(Date value1, Date value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(Date value1, Date value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andEventGetTimerIsNull() {
            addCriterion("event_get_timer is null");
            return (Criteria) this;
        }

        public Criteria andEventGetTimerIsNotNull() {
            addCriterion("event_get_timer is not null");
            return (Criteria) this;
        }

        public Criteria andEventGetTimerEqualTo(String value) {
            addCriterion("event_get_timer =", value, "eventGetTimer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventGetTimerEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_get_timer = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventGetTimerNotEqualTo(String value) {
            addCriterion("event_get_timer <>", value, "eventGetTimer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventGetTimerNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_get_timer <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventGetTimerGreaterThan(String value) {
            addCriterion("event_get_timer >", value, "eventGetTimer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventGetTimerGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_get_timer > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventGetTimerGreaterThanOrEqualTo(String value) {
            addCriterion("event_get_timer >=", value, "eventGetTimer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventGetTimerGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_get_timer >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventGetTimerLessThan(String value) {
            addCriterion("event_get_timer <", value, "eventGetTimer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventGetTimerLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_get_timer < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventGetTimerLessThanOrEqualTo(String value) {
            addCriterion("event_get_timer <=", value, "eventGetTimer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventGetTimerLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_get_timer <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventGetTimerLike(String value) {
            addCriterion("event_get_timer like", value, "eventGetTimer");
            return (Criteria) this;
        }

        public Criteria andEventGetTimerNotLike(String value) {
            addCriterion("event_get_timer not like", value, "eventGetTimer");
            return (Criteria) this;
        }

        public Criteria andEventGetTimerIn(List<String> values) {
            addCriterion("event_get_timer in", values, "eventGetTimer");
            return (Criteria) this;
        }

        public Criteria andEventGetTimerNotIn(List<String> values) {
            addCriterion("event_get_timer not in", values, "eventGetTimer");
            return (Criteria) this;
        }

        public Criteria andEventGetTimerBetween(String value1, String value2) {
            addCriterion("event_get_timer between", value1, value2, "eventGetTimer");
            return (Criteria) this;
        }

        public Criteria andEventGetTimerNotBetween(String value1, String value2) {
            addCriterion("event_get_timer not between", value1, value2, "eventGetTimer");
            return (Criteria) this;
        }

        public Criteria andAppendBatchAcceptedCountIsNull() {
            addCriterion("append_batch_accepted_count is null");
            return (Criteria) this;
        }

        public Criteria andAppendBatchAcceptedCountIsNotNull() {
            addCriterion("append_batch_accepted_count is not null");
            return (Criteria) this;
        }

        public Criteria andAppendBatchAcceptedCountEqualTo(String value) {
            addCriterion("append_batch_accepted_count =", value, "appendBatchAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendBatchAcceptedCountEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_batch_accepted_count = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendBatchAcceptedCountNotEqualTo(String value) {
            addCriterion("append_batch_accepted_count <>", value, "appendBatchAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendBatchAcceptedCountNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_batch_accepted_count <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendBatchAcceptedCountGreaterThan(String value) {
            addCriterion("append_batch_accepted_count >", value, "appendBatchAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendBatchAcceptedCountGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_batch_accepted_count > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendBatchAcceptedCountGreaterThanOrEqualTo(String value) {
            addCriterion("append_batch_accepted_count >=", value, "appendBatchAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendBatchAcceptedCountGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_batch_accepted_count >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendBatchAcceptedCountLessThan(String value) {
            addCriterion("append_batch_accepted_count <", value, "appendBatchAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendBatchAcceptedCountLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_batch_accepted_count < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendBatchAcceptedCountLessThanOrEqualTo(String value) {
            addCriterion("append_batch_accepted_count <=", value, "appendBatchAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendBatchAcceptedCountLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_batch_accepted_count <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendBatchAcceptedCountLike(String value) {
            addCriterion("append_batch_accepted_count like", value, "appendBatchAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andAppendBatchAcceptedCountNotLike(String value) {
            addCriterion("append_batch_accepted_count not like", value, "appendBatchAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andAppendBatchAcceptedCountIn(List<String> values) {
            addCriterion("append_batch_accepted_count in", values, "appendBatchAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andAppendBatchAcceptedCountNotIn(List<String> values) {
            addCriterion("append_batch_accepted_count not in", values, "appendBatchAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andAppendBatchAcceptedCountBetween(String value1, String value2) {
            addCriterion("append_batch_accepted_count between", value1, value2, "appendBatchAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andAppendBatchAcceptedCountNotBetween(String value1, String value2) {
            addCriterion("append_batch_accepted_count not between", value1, value2, "appendBatchAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andEventAcceptedCountIsNull() {
            addCriterion("event_accepted_count is null");
            return (Criteria) this;
        }

        public Criteria andEventAcceptedCountIsNotNull() {
            addCriterion("event_accepted_count is not null");
            return (Criteria) this;
        }

        public Criteria andEventAcceptedCountEqualTo(String value) {
            addCriterion("event_accepted_count =", value, "eventAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventAcceptedCountEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_accepted_count = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventAcceptedCountNotEqualTo(String value) {
            addCriterion("event_accepted_count <>", value, "eventAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventAcceptedCountNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_accepted_count <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventAcceptedCountGreaterThan(String value) {
            addCriterion("event_accepted_count >", value, "eventAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventAcceptedCountGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_accepted_count > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventAcceptedCountGreaterThanOrEqualTo(String value) {
            addCriterion("event_accepted_count >=", value, "eventAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventAcceptedCountGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_accepted_count >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventAcceptedCountLessThan(String value) {
            addCriterion("event_accepted_count <", value, "eventAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventAcceptedCountLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_accepted_count < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventAcceptedCountLessThanOrEqualTo(String value) {
            addCriterion("event_accepted_count <=", value, "eventAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventAcceptedCountLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_accepted_count <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventAcceptedCountLike(String value) {
            addCriterion("event_accepted_count like", value, "eventAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andEventAcceptedCountNotLike(String value) {
            addCriterion("event_accepted_count not like", value, "eventAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andEventAcceptedCountIn(List<String> values) {
            addCriterion("event_accepted_count in", values, "eventAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andEventAcceptedCountNotIn(List<String> values) {
            addCriterion("event_accepted_count not in", values, "eventAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andEventAcceptedCountBetween(String value1, String value2) {
            addCriterion("event_accepted_count between", value1, value2, "eventAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andEventAcceptedCountNotBetween(String value1, String value2) {
            addCriterion("event_accepted_count not between", value1, value2, "eventAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andAppendReceivedCountIsNull() {
            addCriterion("append_received_count is null");
            return (Criteria) this;
        }

        public Criteria andAppendReceivedCountIsNotNull() {
            addCriterion("append_received_count is not null");
            return (Criteria) this;
        }

        public Criteria andAppendReceivedCountEqualTo(String value) {
            addCriterion("append_received_count =", value, "appendReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendReceivedCountEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_received_count = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendReceivedCountNotEqualTo(String value) {
            addCriterion("append_received_count <>", value, "appendReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendReceivedCountNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_received_count <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendReceivedCountGreaterThan(String value) {
            addCriterion("append_received_count >", value, "appendReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendReceivedCountGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_received_count > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendReceivedCountGreaterThanOrEqualTo(String value) {
            addCriterion("append_received_count >=", value, "appendReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendReceivedCountGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_received_count >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendReceivedCountLessThan(String value) {
            addCriterion("append_received_count <", value, "appendReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendReceivedCountLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_received_count < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendReceivedCountLessThanOrEqualTo(String value) {
            addCriterion("append_received_count <=", value, "appendReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendReceivedCountLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_received_count <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendReceivedCountLike(String value) {
            addCriterion("append_received_count like", value, "appendReceivedCount");
            return (Criteria) this;
        }

        public Criteria andAppendReceivedCountNotLike(String value) {
            addCriterion("append_received_count not like", value, "appendReceivedCount");
            return (Criteria) this;
        }

        public Criteria andAppendReceivedCountIn(List<String> values) {
            addCriterion("append_received_count in", values, "appendReceivedCount");
            return (Criteria) this;
        }

        public Criteria andAppendReceivedCountNotIn(List<String> values) {
            addCriterion("append_received_count not in", values, "appendReceivedCount");
            return (Criteria) this;
        }

        public Criteria andAppendReceivedCountBetween(String value1, String value2) {
            addCriterion("append_received_count between", value1, value2, "appendReceivedCount");
            return (Criteria) this;
        }

        public Criteria andAppendReceivedCountNotBetween(String value1, String value2) {
            addCriterion("append_received_count not between", value1, value2, "appendReceivedCount");
            return (Criteria) this;
        }

        public Criteria andAppendBatchReceivedCountIsNull() {
            addCriterion("append_batch_received_count is null");
            return (Criteria) this;
        }

        public Criteria andAppendBatchReceivedCountIsNotNull() {
            addCriterion("append_batch_received_count is not null");
            return (Criteria) this;
        }

        public Criteria andAppendBatchReceivedCountEqualTo(String value) {
            addCriterion("append_batch_received_count =", value, "appendBatchReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendBatchReceivedCountEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_batch_received_count = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendBatchReceivedCountNotEqualTo(String value) {
            addCriterion("append_batch_received_count <>", value, "appendBatchReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendBatchReceivedCountNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_batch_received_count <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendBatchReceivedCountGreaterThan(String value) {
            addCriterion("append_batch_received_count >", value, "appendBatchReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendBatchReceivedCountGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_batch_received_count > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendBatchReceivedCountGreaterThanOrEqualTo(String value) {
            addCriterion("append_batch_received_count >=", value, "appendBatchReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendBatchReceivedCountGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_batch_received_count >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendBatchReceivedCountLessThan(String value) {
            addCriterion("append_batch_received_count <", value, "appendBatchReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendBatchReceivedCountLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_batch_received_count < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendBatchReceivedCountLessThanOrEqualTo(String value) {
            addCriterion("append_batch_received_count <=", value, "appendBatchReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendBatchReceivedCountLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_batch_received_count <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendBatchReceivedCountLike(String value) {
            addCriterion("append_batch_received_count like", value, "appendBatchReceivedCount");
            return (Criteria) this;
        }

        public Criteria andAppendBatchReceivedCountNotLike(String value) {
            addCriterion("append_batch_received_count not like", value, "appendBatchReceivedCount");
            return (Criteria) this;
        }

        public Criteria andAppendBatchReceivedCountIn(List<String> values) {
            addCriterion("append_batch_received_count in", values, "appendBatchReceivedCount");
            return (Criteria) this;
        }

        public Criteria andAppendBatchReceivedCountNotIn(List<String> values) {
            addCriterion("append_batch_received_count not in", values, "appendBatchReceivedCount");
            return (Criteria) this;
        }

        public Criteria andAppendBatchReceivedCountBetween(String value1, String value2) {
            addCriterion("append_batch_received_count between", value1, value2, "appendBatchReceivedCount");
            return (Criteria) this;
        }

        public Criteria andAppendBatchReceivedCountNotBetween(String value1, String value2) {
            addCriterion("append_batch_received_count not between", value1, value2, "appendBatchReceivedCount");
            return (Criteria) this;
        }

        public Criteria andKafkaCommitTimerIsNull() {
            addCriterion("kafka_commit_timer is null");
            return (Criteria) this;
        }

        public Criteria andKafkaCommitTimerIsNotNull() {
            addCriterion("kafka_commit_timer is not null");
            return (Criteria) this;
        }

        public Criteria andKafkaCommitTimerEqualTo(String value) {
            addCriterion("kafka_commit_timer =", value, "kafkaCommitTimer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andKafkaCommitTimerEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("kafka_commit_timer = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andKafkaCommitTimerNotEqualTo(String value) {
            addCriterion("kafka_commit_timer <>", value, "kafkaCommitTimer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andKafkaCommitTimerNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("kafka_commit_timer <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andKafkaCommitTimerGreaterThan(String value) {
            addCriterion("kafka_commit_timer >", value, "kafkaCommitTimer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andKafkaCommitTimerGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("kafka_commit_timer > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andKafkaCommitTimerGreaterThanOrEqualTo(String value) {
            addCriterion("kafka_commit_timer >=", value, "kafkaCommitTimer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andKafkaCommitTimerGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("kafka_commit_timer >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andKafkaCommitTimerLessThan(String value) {
            addCriterion("kafka_commit_timer <", value, "kafkaCommitTimer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andKafkaCommitTimerLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("kafka_commit_timer < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andKafkaCommitTimerLessThanOrEqualTo(String value) {
            addCriterion("kafka_commit_timer <=", value, "kafkaCommitTimer");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andKafkaCommitTimerLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("kafka_commit_timer <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andKafkaCommitTimerLike(String value) {
            addCriterion("kafka_commit_timer like", value, "kafkaCommitTimer");
            return (Criteria) this;
        }

        public Criteria andKafkaCommitTimerNotLike(String value) {
            addCriterion("kafka_commit_timer not like", value, "kafkaCommitTimer");
            return (Criteria) this;
        }

        public Criteria andKafkaCommitTimerIn(List<String> values) {
            addCriterion("kafka_commit_timer in", values, "kafkaCommitTimer");
            return (Criteria) this;
        }

        public Criteria andKafkaCommitTimerNotIn(List<String> values) {
            addCriterion("kafka_commit_timer not in", values, "kafkaCommitTimer");
            return (Criteria) this;
        }

        public Criteria andKafkaCommitTimerBetween(String value1, String value2) {
            addCriterion("kafka_commit_timer between", value1, value2, "kafkaCommitTimer");
            return (Criteria) this;
        }

        public Criteria andKafkaCommitTimerNotBetween(String value1, String value2) {
            addCriterion("kafka_commit_timer not between", value1, value2, "kafkaCommitTimer");
            return (Criteria) this;
        }

        public Criteria andEventReceivedCountIsNull() {
            addCriterion("event_received_count is null");
            return (Criteria) this;
        }

        public Criteria andEventReceivedCountIsNotNull() {
            addCriterion("event_received_count is not null");
            return (Criteria) this;
        }

        public Criteria andEventReceivedCountEqualTo(String value) {
            addCriterion("event_received_count =", value, "eventReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventReceivedCountEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_received_count = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventReceivedCountNotEqualTo(String value) {
            addCriterion("event_received_count <>", value, "eventReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventReceivedCountNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_received_count <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventReceivedCountGreaterThan(String value) {
            addCriterion("event_received_count >", value, "eventReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventReceivedCountGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_received_count > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventReceivedCountGreaterThanOrEqualTo(String value) {
            addCriterion("event_received_count >=", value, "eventReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventReceivedCountGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_received_count >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventReceivedCountLessThan(String value) {
            addCriterion("event_received_count <", value, "eventReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventReceivedCountLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_received_count < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventReceivedCountLessThanOrEqualTo(String value) {
            addCriterion("event_received_count <=", value, "eventReceivedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andEventReceivedCountLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("event_received_count <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventReceivedCountLike(String value) {
            addCriterion("event_received_count like", value, "eventReceivedCount");
            return (Criteria) this;
        }

        public Criteria andEventReceivedCountNotLike(String value) {
            addCriterion("event_received_count not like", value, "eventReceivedCount");
            return (Criteria) this;
        }

        public Criteria andEventReceivedCountIn(List<String> values) {
            addCriterion("event_received_count in", values, "eventReceivedCount");
            return (Criteria) this;
        }

        public Criteria andEventReceivedCountNotIn(List<String> values) {
            addCriterion("event_received_count not in", values, "eventReceivedCount");
            return (Criteria) this;
        }

        public Criteria andEventReceivedCountBetween(String value1, String value2) {
            addCriterion("event_received_count between", value1, value2, "eventReceivedCount");
            return (Criteria) this;
        }

        public Criteria andEventReceivedCountNotBetween(String value1, String value2) {
            addCriterion("event_received_count not between", value1, value2, "eventReceivedCount");
            return (Criteria) this;
        }

        public Criteria andAppendAcceptedCountIsNull() {
            addCriterion("append_accepted_count is null");
            return (Criteria) this;
        }

        public Criteria andAppendAcceptedCountIsNotNull() {
            addCriterion("append_accepted_count is not null");
            return (Criteria) this;
        }

        public Criteria andAppendAcceptedCountEqualTo(String value) {
            addCriterion("append_accepted_count =", value, "appendAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendAcceptedCountEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_accepted_count = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendAcceptedCountNotEqualTo(String value) {
            addCriterion("append_accepted_count <>", value, "appendAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendAcceptedCountNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_accepted_count <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendAcceptedCountGreaterThan(String value) {
            addCriterion("append_accepted_count >", value, "appendAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendAcceptedCountGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_accepted_count > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendAcceptedCountGreaterThanOrEqualTo(String value) {
            addCriterion("append_accepted_count >=", value, "appendAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendAcceptedCountGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_accepted_count >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendAcceptedCountLessThan(String value) {
            addCriterion("append_accepted_count <", value, "appendAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendAcceptedCountLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_accepted_count < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendAcceptedCountLessThanOrEqualTo(String value) {
            addCriterion("append_accepted_count <=", value, "appendAcceptedCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andAppendAcceptedCountLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("append_accepted_count <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAppendAcceptedCountLike(String value) {
            addCriterion("append_accepted_count like", value, "appendAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andAppendAcceptedCountNotLike(String value) {
            addCriterion("append_accepted_count not like", value, "appendAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andAppendAcceptedCountIn(List<String> values) {
            addCriterion("append_accepted_count in", values, "appendAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andAppendAcceptedCountNotIn(List<String> values) {
            addCriterion("append_accepted_count not in", values, "appendAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andAppendAcceptedCountBetween(String value1, String value2) {
            addCriterion("append_accepted_count between", value1, value2, "appendAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andAppendAcceptedCountNotBetween(String value1, String value2) {
            addCriterion("append_accepted_count not between", value1, value2, "appendAcceptedCount");
            return (Criteria) this;
        }

        public Criteria andOpenConnectionCountIsNull() {
            addCriterion("open_connection_count is null");
            return (Criteria) this;
        }

        public Criteria andOpenConnectionCountIsNotNull() {
            addCriterion("open_connection_count is not null");
            return (Criteria) this;
        }

        public Criteria andOpenConnectionCountEqualTo(String value) {
            addCriterion("open_connection_count =", value, "openConnectionCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andOpenConnectionCountEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("open_connection_count = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOpenConnectionCountNotEqualTo(String value) {
            addCriterion("open_connection_count <>", value, "openConnectionCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andOpenConnectionCountNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("open_connection_count <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOpenConnectionCountGreaterThan(String value) {
            addCriterion("open_connection_count >", value, "openConnectionCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andOpenConnectionCountGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("open_connection_count > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOpenConnectionCountGreaterThanOrEqualTo(String value) {
            addCriterion("open_connection_count >=", value, "openConnectionCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andOpenConnectionCountGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("open_connection_count >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOpenConnectionCountLessThan(String value) {
            addCriterion("open_connection_count <", value, "openConnectionCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andOpenConnectionCountLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("open_connection_count < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOpenConnectionCountLessThanOrEqualTo(String value) {
            addCriterion("open_connection_count <=", value, "openConnectionCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andOpenConnectionCountLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("open_connection_count <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOpenConnectionCountLike(String value) {
            addCriterion("open_connection_count like", value, "openConnectionCount");
            return (Criteria) this;
        }

        public Criteria andOpenConnectionCountNotLike(String value) {
            addCriterion("open_connection_count not like", value, "openConnectionCount");
            return (Criteria) this;
        }

        public Criteria andOpenConnectionCountIn(List<String> values) {
            addCriterion("open_connection_count in", values, "openConnectionCount");
            return (Criteria) this;
        }

        public Criteria andOpenConnectionCountNotIn(List<String> values) {
            addCriterion("open_connection_count not in", values, "openConnectionCount");
            return (Criteria) this;
        }

        public Criteria andOpenConnectionCountBetween(String value1, String value2) {
            addCriterion("open_connection_count between", value1, value2, "openConnectionCount");
            return (Criteria) this;
        }

        public Criteria andOpenConnectionCountNotBetween(String value1, String value2) {
            addCriterion("open_connection_count not between", value1, value2, "openConnectionCount");
            return (Criteria) this;
        }

        public Criteria andKafkaEmptyCountIsNull() {
            addCriterion("kafka_empty_count is null");
            return (Criteria) this;
        }

        public Criteria andKafkaEmptyCountIsNotNull() {
            addCriterion("kafka_empty_count is not null");
            return (Criteria) this;
        }

        public Criteria andKafkaEmptyCountEqualTo(String value) {
            addCriterion("kafka_empty_count =", value, "kafkaEmptyCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andKafkaEmptyCountEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("kafka_empty_count = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andKafkaEmptyCountNotEqualTo(String value) {
            addCriterion("kafka_empty_count <>", value, "kafkaEmptyCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andKafkaEmptyCountNotEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("kafka_empty_count <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andKafkaEmptyCountGreaterThan(String value) {
            addCriterion("kafka_empty_count >", value, "kafkaEmptyCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andKafkaEmptyCountGreaterThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("kafka_empty_count > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andKafkaEmptyCountGreaterThanOrEqualTo(String value) {
            addCriterion("kafka_empty_count >=", value, "kafkaEmptyCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andKafkaEmptyCountGreaterThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("kafka_empty_count >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andKafkaEmptyCountLessThan(String value) {
            addCriterion("kafka_empty_count <", value, "kafkaEmptyCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andKafkaEmptyCountLessThanColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("kafka_empty_count < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andKafkaEmptyCountLessThanOrEqualTo(String value) {
            addCriterion("kafka_empty_count <=", value, "kafkaEmptyCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria andKafkaEmptyCountLessThanOrEqualToColumn(SourceInfo.Column column) {
            addCriterion(new StringBuilder("kafka_empty_count <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andKafkaEmptyCountLike(String value) {
            addCriterion("kafka_empty_count like", value, "kafkaEmptyCount");
            return (Criteria) this;
        }

        public Criteria andKafkaEmptyCountNotLike(String value) {
            addCriterion("kafka_empty_count not like", value, "kafkaEmptyCount");
            return (Criteria) this;
        }

        public Criteria andKafkaEmptyCountIn(List<String> values) {
            addCriterion("kafka_empty_count in", values, "kafkaEmptyCount");
            return (Criteria) this;
        }

        public Criteria andKafkaEmptyCountNotIn(List<String> values) {
            addCriterion("kafka_empty_count not in", values, "kafkaEmptyCount");
            return (Criteria) this;
        }

        public Criteria andKafkaEmptyCountBetween(String value1, String value2) {
            addCriterion("kafka_empty_count between", value1, value2, "kafkaEmptyCount");
            return (Criteria) this;
        }

        public Criteria andKafkaEmptyCountNotBetween(String value1, String value2) {
            addCriterion("kafka_empty_count not between", value1, value2, "kafkaEmptyCount");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        private SourceInfoExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        protected Criteria(SourceInfoExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public SourceInfoExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_flume_sourcesInfo
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_flume_sourcesInfo
         *
         * @mbg.generated
         */
        void example(com.qmtec.servicecore.entity.example.SourceInfoExample example);
    }
}