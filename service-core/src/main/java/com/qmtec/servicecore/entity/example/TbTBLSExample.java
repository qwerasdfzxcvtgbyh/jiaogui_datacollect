package com.qmtec.servicecore.entity.example;

import com.qmtec.servicecore.entity.TbTBLS;
import java.util.ArrayList;
import java.util.List;

public class TbTBLSExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    protected Integer offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    protected Integer rows;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public TbTBLSExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public TbTBLSExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public TbTBLSExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        rows = null;
        offset = null;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TbTBLSExample example = new TbTBLSExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public TbTBLSExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public TbTBLSExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public void setRows(Integer rows) {
        this.rows = rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public Integer getRows() {
        return this.rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public TbTBLSExample limit(Integer rows) {
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public TbTBLSExample limit(Integer offset, Integer rows) {
        this.offset = offset;
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public TbTBLSExample page(Integer page, Integer pageSize) {
        this.offset = page * pageSize;
        this.rows = pageSize;
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTblIdIsNull() {
            addCriterion("TBL_ID is null");
            return (Criteria) this;
        }

        public Criteria andTblIdIsNotNull() {
            addCriterion("TBL_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTblIdEqualTo(Long value) {
            addCriterion("TBL_ID =", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblIdEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdNotEqualTo(Long value) {
            addCriterion("TBL_ID <>", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblIdNotEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdGreaterThan(Long value) {
            addCriterion("TBL_ID >", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblIdGreaterThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdGreaterThanOrEqualTo(Long value) {
            addCriterion("TBL_ID >=", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblIdGreaterThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdLessThan(Long value) {
            addCriterion("TBL_ID <", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblIdLessThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdLessThanOrEqualTo(Long value) {
            addCriterion("TBL_ID <=", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblIdLessThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdIn(List<Long> values) {
            addCriterion("TBL_ID in", values, "tblId");
            return (Criteria) this;
        }

        public Criteria andTblIdNotIn(List<Long> values) {
            addCriterion("TBL_ID not in", values, "tblId");
            return (Criteria) this;
        }

        public Criteria andTblIdBetween(Long value1, Long value2) {
            addCriterion("TBL_ID between", value1, value2, "tblId");
            return (Criteria) this;
        }

        public Criteria andTblIdNotBetween(Long value1, Long value2) {
            addCriterion("TBL_ID not between", value1, value2, "tblId");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Integer value) {
            addCriterion("CREATE_TIME =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Integer value) {
            addCriterion("CREATE_TIME <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Integer value) {
            addCriterion("CREATE_TIME >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("CREATE_TIME >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Integer value) {
            addCriterion("CREATE_TIME <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Integer value) {
            addCriterion("CREATE_TIME <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Integer> values) {
            addCriterion("CREATE_TIME in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Integer> values) {
            addCriterion("CREATE_TIME not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Integer value1, Integer value2) {
            addCriterion("CREATE_TIME between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("CREATE_TIME not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andDbIdIsNull() {
            addCriterion("DB_ID is null");
            return (Criteria) this;
        }

        public Criteria andDbIdIsNotNull() {
            addCriterion("DB_ID is not null");
            return (Criteria) this;
        }

        public Criteria andDbIdEqualTo(Long value) {
            addCriterion("DB_ID =", value, "dbId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andDbIdEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("DB_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbIdNotEqualTo(Long value) {
            addCriterion("DB_ID <>", value, "dbId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andDbIdNotEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("DB_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbIdGreaterThan(Long value) {
            addCriterion("DB_ID >", value, "dbId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andDbIdGreaterThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("DB_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbIdGreaterThanOrEqualTo(Long value) {
            addCriterion("DB_ID >=", value, "dbId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andDbIdGreaterThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("DB_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbIdLessThan(Long value) {
            addCriterion("DB_ID <", value, "dbId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andDbIdLessThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("DB_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbIdLessThanOrEqualTo(Long value) {
            addCriterion("DB_ID <=", value, "dbId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andDbIdLessThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("DB_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDbIdIn(List<Long> values) {
            addCriterion("DB_ID in", values, "dbId");
            return (Criteria) this;
        }

        public Criteria andDbIdNotIn(List<Long> values) {
            addCriterion("DB_ID not in", values, "dbId");
            return (Criteria) this;
        }

        public Criteria andDbIdBetween(Long value1, Long value2) {
            addCriterion("DB_ID between", value1, value2, "dbId");
            return (Criteria) this;
        }

        public Criteria andDbIdNotBetween(Long value1, Long value2) {
            addCriterion("DB_ID not between", value1, value2, "dbId");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeIsNull() {
            addCriterion("LAST_ACCESS_TIME is null");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeIsNotNull() {
            addCriterion("LAST_ACCESS_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeEqualTo(Integer value) {
            addCriterion("LAST_ACCESS_TIME =", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeNotEqualTo(Integer value) {
            addCriterion("LAST_ACCESS_TIME <>", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeNotEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeGreaterThan(Integer value) {
            addCriterion("LAST_ACCESS_TIME >", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeGreaterThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("LAST_ACCESS_TIME >=", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeGreaterThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeLessThan(Integer value) {
            addCriterion("LAST_ACCESS_TIME <", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeLessThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeLessThanOrEqualTo(Integer value) {
            addCriterion("LAST_ACCESS_TIME <=", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeLessThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeIn(List<Integer> values) {
            addCriterion("LAST_ACCESS_TIME in", values, "lastAccessTime");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeNotIn(List<Integer> values) {
            addCriterion("LAST_ACCESS_TIME not in", values, "lastAccessTime");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeBetween(Integer value1, Integer value2) {
            addCriterion("LAST_ACCESS_TIME between", value1, value2, "lastAccessTime");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("LAST_ACCESS_TIME not between", value1, value2, "lastAccessTime");
            return (Criteria) this;
        }

        public Criteria andOwnerIsNull() {
            addCriterion("`OWNER` is null");
            return (Criteria) this;
        }

        public Criteria andOwnerIsNotNull() {
            addCriterion("`OWNER` is not null");
            return (Criteria) this;
        }

        public Criteria andOwnerEqualTo(String value) {
            addCriterion("`OWNER` =", value, "owner");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andOwnerEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("`OWNER` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerNotEqualTo(String value) {
            addCriterion("`OWNER` <>", value, "owner");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andOwnerNotEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("`OWNER` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerGreaterThan(String value) {
            addCriterion("`OWNER` >", value, "owner");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andOwnerGreaterThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("`OWNER` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerGreaterThanOrEqualTo(String value) {
            addCriterion("`OWNER` >=", value, "owner");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andOwnerGreaterThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("`OWNER` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerLessThan(String value) {
            addCriterion("`OWNER` <", value, "owner");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andOwnerLessThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("`OWNER` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerLessThanOrEqualTo(String value) {
            addCriterion("`OWNER` <=", value, "owner");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andOwnerLessThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("`OWNER` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerLike(String value) {
            addCriterion("`OWNER` like", value, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerNotLike(String value) {
            addCriterion("`OWNER` not like", value, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerIn(List<String> values) {
            addCriterion("`OWNER` in", values, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerNotIn(List<String> values) {
            addCriterion("`OWNER` not in", values, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerBetween(String value1, String value2) {
            addCriterion("`OWNER` between", value1, value2, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerNotBetween(String value1, String value2) {
            addCriterion("`OWNER` not between", value1, value2, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerTypeIsNull() {
            addCriterion("OWNER_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andOwnerTypeIsNotNull() {
            addCriterion("OWNER_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andOwnerTypeEqualTo(String value) {
            addCriterion("OWNER_TYPE =", value, "ownerType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andOwnerTypeEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("OWNER_TYPE = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerTypeNotEqualTo(String value) {
            addCriterion("OWNER_TYPE <>", value, "ownerType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andOwnerTypeNotEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("OWNER_TYPE <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerTypeGreaterThan(String value) {
            addCriterion("OWNER_TYPE >", value, "ownerType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andOwnerTypeGreaterThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("OWNER_TYPE > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerTypeGreaterThanOrEqualTo(String value) {
            addCriterion("OWNER_TYPE >=", value, "ownerType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andOwnerTypeGreaterThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("OWNER_TYPE >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerTypeLessThan(String value) {
            addCriterion("OWNER_TYPE <", value, "ownerType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andOwnerTypeLessThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("OWNER_TYPE < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerTypeLessThanOrEqualTo(String value) {
            addCriterion("OWNER_TYPE <=", value, "ownerType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andOwnerTypeLessThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("OWNER_TYPE <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnerTypeLike(String value) {
            addCriterion("OWNER_TYPE like", value, "ownerType");
            return (Criteria) this;
        }

        public Criteria andOwnerTypeNotLike(String value) {
            addCriterion("OWNER_TYPE not like", value, "ownerType");
            return (Criteria) this;
        }

        public Criteria andOwnerTypeIn(List<String> values) {
            addCriterion("OWNER_TYPE in", values, "ownerType");
            return (Criteria) this;
        }

        public Criteria andOwnerTypeNotIn(List<String> values) {
            addCriterion("OWNER_TYPE not in", values, "ownerType");
            return (Criteria) this;
        }

        public Criteria andOwnerTypeBetween(String value1, String value2) {
            addCriterion("OWNER_TYPE between", value1, value2, "ownerType");
            return (Criteria) this;
        }

        public Criteria andOwnerTypeNotBetween(String value1, String value2) {
            addCriterion("OWNER_TYPE not between", value1, value2, "ownerType");
            return (Criteria) this;
        }

        public Criteria andRetentionIsNull() {
            addCriterion("RETENTION is null");
            return (Criteria) this;
        }

        public Criteria andRetentionIsNotNull() {
            addCriterion("RETENTION is not null");
            return (Criteria) this;
        }

        public Criteria andRetentionEqualTo(Integer value) {
            addCriterion("RETENTION =", value, "retention");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andRetentionEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("RETENTION = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRetentionNotEqualTo(Integer value) {
            addCriterion("RETENTION <>", value, "retention");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andRetentionNotEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("RETENTION <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRetentionGreaterThan(Integer value) {
            addCriterion("RETENTION >", value, "retention");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andRetentionGreaterThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("RETENTION > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRetentionGreaterThanOrEqualTo(Integer value) {
            addCriterion("RETENTION >=", value, "retention");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andRetentionGreaterThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("RETENTION >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRetentionLessThan(Integer value) {
            addCriterion("RETENTION <", value, "retention");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andRetentionLessThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("RETENTION < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRetentionLessThanOrEqualTo(Integer value) {
            addCriterion("RETENTION <=", value, "retention");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andRetentionLessThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("RETENTION <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRetentionIn(List<Integer> values) {
            addCriterion("RETENTION in", values, "retention");
            return (Criteria) this;
        }

        public Criteria andRetentionNotIn(List<Integer> values) {
            addCriterion("RETENTION not in", values, "retention");
            return (Criteria) this;
        }

        public Criteria andRetentionBetween(Integer value1, Integer value2) {
            addCriterion("RETENTION between", value1, value2, "retention");
            return (Criteria) this;
        }

        public Criteria andRetentionNotBetween(Integer value1, Integer value2) {
            addCriterion("RETENTION not between", value1, value2, "retention");
            return (Criteria) this;
        }

        public Criteria andSdIdIsNull() {
            addCriterion("SD_ID is null");
            return (Criteria) this;
        }

        public Criteria andSdIdIsNotNull() {
            addCriterion("SD_ID is not null");
            return (Criteria) this;
        }

        public Criteria andSdIdEqualTo(Long value) {
            addCriterion("SD_ID =", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andSdIdEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("SD_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdNotEqualTo(Long value) {
            addCriterion("SD_ID <>", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andSdIdNotEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("SD_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdGreaterThan(Long value) {
            addCriterion("SD_ID >", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andSdIdGreaterThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("SD_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdGreaterThanOrEqualTo(Long value) {
            addCriterion("SD_ID >=", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andSdIdGreaterThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("SD_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdLessThan(Long value) {
            addCriterion("SD_ID <", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andSdIdLessThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("SD_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdLessThanOrEqualTo(Long value) {
            addCriterion("SD_ID <=", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andSdIdLessThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("SD_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdIn(List<Long> values) {
            addCriterion("SD_ID in", values, "sdId");
            return (Criteria) this;
        }

        public Criteria andSdIdNotIn(List<Long> values) {
            addCriterion("SD_ID not in", values, "sdId");
            return (Criteria) this;
        }

        public Criteria andSdIdBetween(Long value1, Long value2) {
            addCriterion("SD_ID between", value1, value2, "sdId");
            return (Criteria) this;
        }

        public Criteria andSdIdNotBetween(Long value1, Long value2) {
            addCriterion("SD_ID not between", value1, value2, "sdId");
            return (Criteria) this;
        }

        public Criteria andTblNameIsNull() {
            addCriterion("TBL_NAME is null");
            return (Criteria) this;
        }

        public Criteria andTblNameIsNotNull() {
            addCriterion("TBL_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andTblNameEqualTo(String value) {
            addCriterion("TBL_NAME =", value, "tblName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblNameEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_NAME = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblNameNotEqualTo(String value) {
            addCriterion("TBL_NAME <>", value, "tblName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblNameNotEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_NAME <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblNameGreaterThan(String value) {
            addCriterion("TBL_NAME >", value, "tblName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblNameGreaterThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_NAME > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblNameGreaterThanOrEqualTo(String value) {
            addCriterion("TBL_NAME >=", value, "tblName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblNameGreaterThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_NAME >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblNameLessThan(String value) {
            addCriterion("TBL_NAME <", value, "tblName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblNameLessThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_NAME < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblNameLessThanOrEqualTo(String value) {
            addCriterion("TBL_NAME <=", value, "tblName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblNameLessThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_NAME <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblNameLike(String value) {
            addCriterion("TBL_NAME like", value, "tblName");
            return (Criteria) this;
        }

        public Criteria andTblNameNotLike(String value) {
            addCriterion("TBL_NAME not like", value, "tblName");
            return (Criteria) this;
        }

        public Criteria andTblNameIn(List<String> values) {
            addCriterion("TBL_NAME in", values, "tblName");
            return (Criteria) this;
        }

        public Criteria andTblNameNotIn(List<String> values) {
            addCriterion("TBL_NAME not in", values, "tblName");
            return (Criteria) this;
        }

        public Criteria andTblNameBetween(String value1, String value2) {
            addCriterion("TBL_NAME between", value1, value2, "tblName");
            return (Criteria) this;
        }

        public Criteria andTblNameNotBetween(String value1, String value2) {
            addCriterion("TBL_NAME not between", value1, value2, "tblName");
            return (Criteria) this;
        }

        public Criteria andTblTypeIsNull() {
            addCriterion("TBL_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andTblTypeIsNotNull() {
            addCriterion("TBL_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andTblTypeEqualTo(String value) {
            addCriterion("TBL_TYPE =", value, "tblType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblTypeEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_TYPE = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblTypeNotEqualTo(String value) {
            addCriterion("TBL_TYPE <>", value, "tblType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblTypeNotEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_TYPE <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblTypeGreaterThan(String value) {
            addCriterion("TBL_TYPE >", value, "tblType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblTypeGreaterThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_TYPE > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblTypeGreaterThanOrEqualTo(String value) {
            addCriterion("TBL_TYPE >=", value, "tblType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblTypeGreaterThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_TYPE >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblTypeLessThan(String value) {
            addCriterion("TBL_TYPE <", value, "tblType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblTypeLessThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_TYPE < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblTypeLessThanOrEqualTo(String value) {
            addCriterion("TBL_TYPE <=", value, "tblType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andTblTypeLessThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("TBL_TYPE <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblTypeLike(String value) {
            addCriterion("TBL_TYPE like", value, "tblType");
            return (Criteria) this;
        }

        public Criteria andTblTypeNotLike(String value) {
            addCriterion("TBL_TYPE not like", value, "tblType");
            return (Criteria) this;
        }

        public Criteria andTblTypeIn(List<String> values) {
            addCriterion("TBL_TYPE in", values, "tblType");
            return (Criteria) this;
        }

        public Criteria andTblTypeNotIn(List<String> values) {
            addCriterion("TBL_TYPE not in", values, "tblType");
            return (Criteria) this;
        }

        public Criteria andTblTypeBetween(String value1, String value2) {
            addCriterion("TBL_TYPE between", value1, value2, "tblType");
            return (Criteria) this;
        }

        public Criteria andTblTypeNotBetween(String value1, String value2) {
            addCriterion("TBL_TYPE not between", value1, value2, "tblType");
            return (Criteria) this;
        }

        public Criteria andIsRewriteEnabledIsNull() {
            addCriterion("IS_REWRITE_ENABLED is null");
            return (Criteria) this;
        }

        public Criteria andIsRewriteEnabledIsNotNull() {
            addCriterion("IS_REWRITE_ENABLED is not null");
            return (Criteria) this;
        }

        public Criteria andIsRewriteEnabledEqualTo(Boolean value) {
            addCriterion("IS_REWRITE_ENABLED =", value, "isRewriteEnabled");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andIsRewriteEnabledEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("IS_REWRITE_ENABLED = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRewriteEnabledNotEqualTo(Boolean value) {
            addCriterion("IS_REWRITE_ENABLED <>", value, "isRewriteEnabled");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andIsRewriteEnabledNotEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("IS_REWRITE_ENABLED <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRewriteEnabledGreaterThan(Boolean value) {
            addCriterion("IS_REWRITE_ENABLED >", value, "isRewriteEnabled");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andIsRewriteEnabledGreaterThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("IS_REWRITE_ENABLED > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRewriteEnabledGreaterThanOrEqualTo(Boolean value) {
            addCriterion("IS_REWRITE_ENABLED >=", value, "isRewriteEnabled");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andIsRewriteEnabledGreaterThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("IS_REWRITE_ENABLED >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRewriteEnabledLessThan(Boolean value) {
            addCriterion("IS_REWRITE_ENABLED <", value, "isRewriteEnabled");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andIsRewriteEnabledLessThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("IS_REWRITE_ENABLED < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRewriteEnabledLessThanOrEqualTo(Boolean value) {
            addCriterion("IS_REWRITE_ENABLED <=", value, "isRewriteEnabled");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andIsRewriteEnabledLessThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("IS_REWRITE_ENABLED <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRewriteEnabledIn(List<Boolean> values) {
            addCriterion("IS_REWRITE_ENABLED in", values, "isRewriteEnabled");
            return (Criteria) this;
        }

        public Criteria andIsRewriteEnabledNotIn(List<Boolean> values) {
            addCriterion("IS_REWRITE_ENABLED not in", values, "isRewriteEnabled");
            return (Criteria) this;
        }

        public Criteria andIsRewriteEnabledBetween(Boolean value1, Boolean value2) {
            addCriterion("IS_REWRITE_ENABLED between", value1, value2, "isRewriteEnabled");
            return (Criteria) this;
        }

        public Criteria andIsRewriteEnabledNotBetween(Boolean value1, Boolean value2) {
            addCriterion("IS_REWRITE_ENABLED not between", value1, value2, "isRewriteEnabled");
            return (Criteria) this;
        }

        public Criteria andWriteIdIsNull() {
            addCriterion("WRITE_ID is null");
            return (Criteria) this;
        }

        public Criteria andWriteIdIsNotNull() {
            addCriterion("WRITE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andWriteIdEqualTo(Long value) {
            addCriterion("WRITE_ID =", value, "writeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andWriteIdEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("WRITE_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWriteIdNotEqualTo(Long value) {
            addCriterion("WRITE_ID <>", value, "writeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andWriteIdNotEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("WRITE_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWriteIdGreaterThan(Long value) {
            addCriterion("WRITE_ID >", value, "writeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andWriteIdGreaterThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("WRITE_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWriteIdGreaterThanOrEqualTo(Long value) {
            addCriterion("WRITE_ID >=", value, "writeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andWriteIdGreaterThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("WRITE_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWriteIdLessThan(Long value) {
            addCriterion("WRITE_ID <", value, "writeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andWriteIdLessThanColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("WRITE_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWriteIdLessThanOrEqualTo(Long value) {
            addCriterion("WRITE_ID <=", value, "writeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria andWriteIdLessThanOrEqualToColumn(TbTBLS.Column column) {
            addCriterion(new StringBuilder("WRITE_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWriteIdIn(List<Long> values) {
            addCriterion("WRITE_ID in", values, "writeId");
            return (Criteria) this;
        }

        public Criteria andWriteIdNotIn(List<Long> values) {
            addCriterion("WRITE_ID not in", values, "writeId");
            return (Criteria) this;
        }

        public Criteria andWriteIdBetween(Long value1, Long value2) {
            addCriterion("WRITE_ID between", value1, value2, "writeId");
            return (Criteria) this;
        }

        public Criteria andWriteIdNotBetween(Long value1, Long value2) {
            addCriterion("WRITE_ID not between", value1, value2, "writeId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TBLS
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        private TbTBLSExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        protected Criteria(TbTBLSExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public TbTBLSExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TBLS
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table TBLS
         *
         * @mbg.generated
         */
        void example(com.qmtec.servicecore.entity.example.TbTBLSExample example);
    }
}