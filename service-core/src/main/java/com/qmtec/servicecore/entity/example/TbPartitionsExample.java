package com.qmtec.servicecore.entity.example;

import com.qmtec.servicecore.entity.TbPartitions;
import java.util.ArrayList;
import java.util.List;

public class TbPartitionsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    protected Integer offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    protected Integer rows;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public TbPartitionsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public TbPartitionsExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public TbPartitionsExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        rows = null;
        offset = null;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TbPartitionsExample example = new TbPartitionsExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public TbPartitionsExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public TbPartitionsExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public void setRows(Integer rows) {
        this.rows = rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public Integer getRows() {
        return this.rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public TbPartitionsExample limit(Integer rows) {
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public TbPartitionsExample limit(Integer offset, Integer rows) {
        this.offset = offset;
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public TbPartitionsExample page(Integer page, Integer pageSize) {
        this.offset = page * pageSize;
        this.rows = pageSize;
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPartIdIsNull() {
            addCriterion("PART_ID is null");
            return (Criteria) this;
        }

        public Criteria andPartIdIsNotNull() {
            addCriterion("PART_ID is not null");
            return (Criteria) this;
        }

        public Criteria andPartIdEqualTo(Long value) {
            addCriterion("PART_ID =", value, "partId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andPartIdEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("PART_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPartIdNotEqualTo(Long value) {
            addCriterion("PART_ID <>", value, "partId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andPartIdNotEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("PART_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPartIdGreaterThan(Long value) {
            addCriterion("PART_ID >", value, "partId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andPartIdGreaterThanColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("PART_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPartIdGreaterThanOrEqualTo(Long value) {
            addCriterion("PART_ID >=", value, "partId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andPartIdGreaterThanOrEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("PART_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPartIdLessThan(Long value) {
            addCriterion("PART_ID <", value, "partId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andPartIdLessThanColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("PART_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPartIdLessThanOrEqualTo(Long value) {
            addCriterion("PART_ID <=", value, "partId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andPartIdLessThanOrEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("PART_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPartIdIn(List<Long> values) {
            addCriterion("PART_ID in", values, "partId");
            return (Criteria) this;
        }

        public Criteria andPartIdNotIn(List<Long> values) {
            addCriterion("PART_ID not in", values, "partId");
            return (Criteria) this;
        }

        public Criteria andPartIdBetween(Long value1, Long value2) {
            addCriterion("PART_ID between", value1, value2, "partId");
            return (Criteria) this;
        }

        public Criteria andPartIdNotBetween(Long value1, Long value2) {
            addCriterion("PART_ID not between", value1, value2, "partId");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Integer value) {
            addCriterion("CREATE_TIME =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Integer value) {
            addCriterion("CREATE_TIME <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Integer value) {
            addCriterion("CREATE_TIME >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("CREATE_TIME >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Integer value) {
            addCriterion("CREATE_TIME <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Integer value) {
            addCriterion("CREATE_TIME <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Integer> values) {
            addCriterion("CREATE_TIME in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Integer> values) {
            addCriterion("CREATE_TIME not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Integer value1, Integer value2) {
            addCriterion("CREATE_TIME between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("CREATE_TIME not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeIsNull() {
            addCriterion("LAST_ACCESS_TIME is null");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeIsNotNull() {
            addCriterion("LAST_ACCESS_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeEqualTo(Integer value) {
            addCriterion("LAST_ACCESS_TIME =", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeNotEqualTo(Integer value) {
            addCriterion("LAST_ACCESS_TIME <>", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeNotEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeGreaterThan(Integer value) {
            addCriterion("LAST_ACCESS_TIME >", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeGreaterThanColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("LAST_ACCESS_TIME >=", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeGreaterThanOrEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeLessThan(Integer value) {
            addCriterion("LAST_ACCESS_TIME <", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeLessThanColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeLessThanOrEqualTo(Integer value) {
            addCriterion("LAST_ACCESS_TIME <=", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeLessThanOrEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeIn(List<Integer> values) {
            addCriterion("LAST_ACCESS_TIME in", values, "lastAccessTime");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeNotIn(List<Integer> values) {
            addCriterion("LAST_ACCESS_TIME not in", values, "lastAccessTime");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeBetween(Integer value1, Integer value2) {
            addCriterion("LAST_ACCESS_TIME between", value1, value2, "lastAccessTime");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("LAST_ACCESS_TIME not between", value1, value2, "lastAccessTime");
            return (Criteria) this;
        }

        public Criteria andPartNameIsNull() {
            addCriterion("PART_NAME is null");
            return (Criteria) this;
        }

        public Criteria andPartNameIsNotNull() {
            addCriterion("PART_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andPartNameEqualTo(String value) {
            addCriterion("PART_NAME =", value, "partName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andPartNameEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("PART_NAME = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPartNameNotEqualTo(String value) {
            addCriterion("PART_NAME <>", value, "partName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andPartNameNotEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("PART_NAME <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPartNameGreaterThan(String value) {
            addCriterion("PART_NAME >", value, "partName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andPartNameGreaterThanColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("PART_NAME > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPartNameGreaterThanOrEqualTo(String value) {
            addCriterion("PART_NAME >=", value, "partName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andPartNameGreaterThanOrEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("PART_NAME >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPartNameLessThan(String value) {
            addCriterion("PART_NAME <", value, "partName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andPartNameLessThanColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("PART_NAME < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPartNameLessThanOrEqualTo(String value) {
            addCriterion("PART_NAME <=", value, "partName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andPartNameLessThanOrEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("PART_NAME <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPartNameLike(String value) {
            addCriterion("PART_NAME like", value, "partName");
            return (Criteria) this;
        }

        public Criteria andPartNameNotLike(String value) {
            addCriterion("PART_NAME not like", value, "partName");
            return (Criteria) this;
        }

        public Criteria andPartNameIn(List<String> values) {
            addCriterion("PART_NAME in", values, "partName");
            return (Criteria) this;
        }

        public Criteria andPartNameNotIn(List<String> values) {
            addCriterion("PART_NAME not in", values, "partName");
            return (Criteria) this;
        }

        public Criteria andPartNameBetween(String value1, String value2) {
            addCriterion("PART_NAME between", value1, value2, "partName");
            return (Criteria) this;
        }

        public Criteria andPartNameNotBetween(String value1, String value2) {
            addCriterion("PART_NAME not between", value1, value2, "partName");
            return (Criteria) this;
        }

        public Criteria andSdIdIsNull() {
            addCriterion("SD_ID is null");
            return (Criteria) this;
        }

        public Criteria andSdIdIsNotNull() {
            addCriterion("SD_ID is not null");
            return (Criteria) this;
        }

        public Criteria andSdIdEqualTo(Long value) {
            addCriterion("SD_ID =", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andSdIdEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("SD_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdNotEqualTo(Long value) {
            addCriterion("SD_ID <>", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andSdIdNotEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("SD_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdGreaterThan(Long value) {
            addCriterion("SD_ID >", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andSdIdGreaterThanColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("SD_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdGreaterThanOrEqualTo(Long value) {
            addCriterion("SD_ID >=", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andSdIdGreaterThanOrEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("SD_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdLessThan(Long value) {
            addCriterion("SD_ID <", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andSdIdLessThanColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("SD_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdLessThanOrEqualTo(Long value) {
            addCriterion("SD_ID <=", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andSdIdLessThanOrEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("SD_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdIn(List<Long> values) {
            addCriterion("SD_ID in", values, "sdId");
            return (Criteria) this;
        }

        public Criteria andSdIdNotIn(List<Long> values) {
            addCriterion("SD_ID not in", values, "sdId");
            return (Criteria) this;
        }

        public Criteria andSdIdBetween(Long value1, Long value2) {
            addCriterion("SD_ID between", value1, value2, "sdId");
            return (Criteria) this;
        }

        public Criteria andSdIdNotBetween(Long value1, Long value2) {
            addCriterion("SD_ID not between", value1, value2, "sdId");
            return (Criteria) this;
        }

        public Criteria andTblIdIsNull() {
            addCriterion("TBL_ID is null");
            return (Criteria) this;
        }

        public Criteria andTblIdIsNotNull() {
            addCriterion("TBL_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTblIdEqualTo(Long value) {
            addCriterion("TBL_ID =", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andTblIdEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("TBL_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdNotEqualTo(Long value) {
            addCriterion("TBL_ID <>", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andTblIdNotEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("TBL_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdGreaterThan(Long value) {
            addCriterion("TBL_ID >", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andTblIdGreaterThanColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("TBL_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdGreaterThanOrEqualTo(Long value) {
            addCriterion("TBL_ID >=", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andTblIdGreaterThanOrEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("TBL_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdLessThan(Long value) {
            addCriterion("TBL_ID <", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andTblIdLessThanColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("TBL_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdLessThanOrEqualTo(Long value) {
            addCriterion("TBL_ID <=", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andTblIdLessThanOrEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("TBL_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdIn(List<Long> values) {
            addCriterion("TBL_ID in", values, "tblId");
            return (Criteria) this;
        }

        public Criteria andTblIdNotIn(List<Long> values) {
            addCriterion("TBL_ID not in", values, "tblId");
            return (Criteria) this;
        }

        public Criteria andTblIdBetween(Long value1, Long value2) {
            addCriterion("TBL_ID between", value1, value2, "tblId");
            return (Criteria) this;
        }

        public Criteria andTblIdNotBetween(Long value1, Long value2) {
            addCriterion("TBL_ID not between", value1, value2, "tblId");
            return (Criteria) this;
        }

        public Criteria andWriteIdIsNull() {
            addCriterion("WRITE_ID is null");
            return (Criteria) this;
        }

        public Criteria andWriteIdIsNotNull() {
            addCriterion("WRITE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andWriteIdEqualTo(Long value) {
            addCriterion("WRITE_ID =", value, "writeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andWriteIdEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("WRITE_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWriteIdNotEqualTo(Long value) {
            addCriterion("WRITE_ID <>", value, "writeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andWriteIdNotEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("WRITE_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWriteIdGreaterThan(Long value) {
            addCriterion("WRITE_ID >", value, "writeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andWriteIdGreaterThanColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("WRITE_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWriteIdGreaterThanOrEqualTo(Long value) {
            addCriterion("WRITE_ID >=", value, "writeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andWriteIdGreaterThanOrEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("WRITE_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWriteIdLessThan(Long value) {
            addCriterion("WRITE_ID <", value, "writeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andWriteIdLessThanColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("WRITE_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWriteIdLessThanOrEqualTo(Long value) {
            addCriterion("WRITE_ID <=", value, "writeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria andWriteIdLessThanOrEqualToColumn(TbPartitions.Column column) {
            addCriterion(new StringBuilder("WRITE_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWriteIdIn(List<Long> values) {
            addCriterion("WRITE_ID in", values, "writeId");
            return (Criteria) this;
        }

        public Criteria andWriteIdNotIn(List<Long> values) {
            addCriterion("WRITE_ID not in", values, "writeId");
            return (Criteria) this;
        }

        public Criteria andWriteIdBetween(Long value1, Long value2) {
            addCriterion("WRITE_ID between", value1, value2, "writeId");
            return (Criteria) this;
        }

        public Criteria andWriteIdNotBetween(Long value1, Long value2) {
            addCriterion("WRITE_ID not between", value1, value2, "writeId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PARTITIONS
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        private TbPartitionsExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        protected Criteria(TbPartitionsExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public TbPartitionsExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PARTITIONS
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITIONS
         *
         * @mbg.generated
         */
        void example(com.qmtec.servicecore.entity.example.TbPartitionsExample example);
    }
}