package com.qmtec.servicecore.entity.example;

import com.qmtec.servicecore.entity.TbPartitionKeys;
import java.util.ArrayList;
import java.util.List;

public class TbPartitionKeysExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    protected Integer offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    protected Integer rows;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public TbPartitionKeysExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public TbPartitionKeysExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public TbPartitionKeysExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        rows = null;
        offset = null;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TbPartitionKeysExample example = new TbPartitionKeysExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public TbPartitionKeysExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public TbPartitionKeysExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public void setRows(Integer rows) {
        this.rows = rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public Integer getRows() {
        return this.rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public TbPartitionKeysExample limit(Integer rows) {
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public TbPartitionKeysExample limit(Integer offset, Integer rows) {
        this.offset = offset;
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public TbPartitionKeysExample page(Integer page, Integer pageSize) {
        this.offset = page * pageSize;
        this.rows = pageSize;
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTblIdIsNull() {
            addCriterion("TBL_ID is null");
            return (Criteria) this;
        }

        public Criteria andTblIdIsNotNull() {
            addCriterion("TBL_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTblIdEqualTo(Long value) {
            addCriterion("TBL_ID =", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andTblIdEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("TBL_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdNotEqualTo(Long value) {
            addCriterion("TBL_ID <>", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andTblIdNotEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("TBL_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdGreaterThan(Long value) {
            addCriterion("TBL_ID >", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andTblIdGreaterThanColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("TBL_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdGreaterThanOrEqualTo(Long value) {
            addCriterion("TBL_ID >=", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andTblIdGreaterThanOrEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("TBL_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdLessThan(Long value) {
            addCriterion("TBL_ID <", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andTblIdLessThanColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("TBL_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdLessThanOrEqualTo(Long value) {
            addCriterion("TBL_ID <=", value, "tblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andTblIdLessThanOrEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("TBL_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTblIdIn(List<Long> values) {
            addCriterion("TBL_ID in", values, "tblId");
            return (Criteria) this;
        }

        public Criteria andTblIdNotIn(List<Long> values) {
            addCriterion("TBL_ID not in", values, "tblId");
            return (Criteria) this;
        }

        public Criteria andTblIdBetween(Long value1, Long value2) {
            addCriterion("TBL_ID between", value1, value2, "tblId");
            return (Criteria) this;
        }

        public Criteria andTblIdNotBetween(Long value1, Long value2) {
            addCriterion("TBL_ID not between", value1, value2, "tblId");
            return (Criteria) this;
        }

        public Criteria andPkeyNameIsNull() {
            addCriterion("PKEY_NAME is null");
            return (Criteria) this;
        }

        public Criteria andPkeyNameIsNotNull() {
            addCriterion("PKEY_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andPkeyNameEqualTo(String value) {
            addCriterion("PKEY_NAME =", value, "pkeyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyNameEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_NAME = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyNameNotEqualTo(String value) {
            addCriterion("PKEY_NAME <>", value, "pkeyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyNameNotEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_NAME <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyNameGreaterThan(String value) {
            addCriterion("PKEY_NAME >", value, "pkeyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyNameGreaterThanColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_NAME > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyNameGreaterThanOrEqualTo(String value) {
            addCriterion("PKEY_NAME >=", value, "pkeyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyNameGreaterThanOrEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_NAME >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyNameLessThan(String value) {
            addCriterion("PKEY_NAME <", value, "pkeyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyNameLessThanColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_NAME < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyNameLessThanOrEqualTo(String value) {
            addCriterion("PKEY_NAME <=", value, "pkeyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyNameLessThanOrEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_NAME <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyNameLike(String value) {
            addCriterion("PKEY_NAME like", value, "pkeyName");
            return (Criteria) this;
        }

        public Criteria andPkeyNameNotLike(String value) {
            addCriterion("PKEY_NAME not like", value, "pkeyName");
            return (Criteria) this;
        }

        public Criteria andPkeyNameIn(List<String> values) {
            addCriterion("PKEY_NAME in", values, "pkeyName");
            return (Criteria) this;
        }

        public Criteria andPkeyNameNotIn(List<String> values) {
            addCriterion("PKEY_NAME not in", values, "pkeyName");
            return (Criteria) this;
        }

        public Criteria andPkeyNameBetween(String value1, String value2) {
            addCriterion("PKEY_NAME between", value1, value2, "pkeyName");
            return (Criteria) this;
        }

        public Criteria andPkeyNameNotBetween(String value1, String value2) {
            addCriterion("PKEY_NAME not between", value1, value2, "pkeyName");
            return (Criteria) this;
        }

        public Criteria andPkeyCommentIsNull() {
            addCriterion("PKEY_COMMENT is null");
            return (Criteria) this;
        }

        public Criteria andPkeyCommentIsNotNull() {
            addCriterion("PKEY_COMMENT is not null");
            return (Criteria) this;
        }

        public Criteria andPkeyCommentEqualTo(String value) {
            addCriterion("PKEY_COMMENT =", value, "pkeyComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyCommentEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_COMMENT = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyCommentNotEqualTo(String value) {
            addCriterion("PKEY_COMMENT <>", value, "pkeyComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyCommentNotEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_COMMENT <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyCommentGreaterThan(String value) {
            addCriterion("PKEY_COMMENT >", value, "pkeyComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyCommentGreaterThanColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_COMMENT > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyCommentGreaterThanOrEqualTo(String value) {
            addCriterion("PKEY_COMMENT >=", value, "pkeyComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyCommentGreaterThanOrEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_COMMENT >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyCommentLessThan(String value) {
            addCriterion("PKEY_COMMENT <", value, "pkeyComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyCommentLessThanColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_COMMENT < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyCommentLessThanOrEqualTo(String value) {
            addCriterion("PKEY_COMMENT <=", value, "pkeyComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyCommentLessThanOrEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_COMMENT <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyCommentLike(String value) {
            addCriterion("PKEY_COMMENT like", value, "pkeyComment");
            return (Criteria) this;
        }

        public Criteria andPkeyCommentNotLike(String value) {
            addCriterion("PKEY_COMMENT not like", value, "pkeyComment");
            return (Criteria) this;
        }

        public Criteria andPkeyCommentIn(List<String> values) {
            addCriterion("PKEY_COMMENT in", values, "pkeyComment");
            return (Criteria) this;
        }

        public Criteria andPkeyCommentNotIn(List<String> values) {
            addCriterion("PKEY_COMMENT not in", values, "pkeyComment");
            return (Criteria) this;
        }

        public Criteria andPkeyCommentBetween(String value1, String value2) {
            addCriterion("PKEY_COMMENT between", value1, value2, "pkeyComment");
            return (Criteria) this;
        }

        public Criteria andPkeyCommentNotBetween(String value1, String value2) {
            addCriterion("PKEY_COMMENT not between", value1, value2, "pkeyComment");
            return (Criteria) this;
        }

        public Criteria andPkeyTypeIsNull() {
            addCriterion("PKEY_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andPkeyTypeIsNotNull() {
            addCriterion("PKEY_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andPkeyTypeEqualTo(String value) {
            addCriterion("PKEY_TYPE =", value, "pkeyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyTypeEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_TYPE = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyTypeNotEqualTo(String value) {
            addCriterion("PKEY_TYPE <>", value, "pkeyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyTypeNotEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_TYPE <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyTypeGreaterThan(String value) {
            addCriterion("PKEY_TYPE >", value, "pkeyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyTypeGreaterThanColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_TYPE > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyTypeGreaterThanOrEqualTo(String value) {
            addCriterion("PKEY_TYPE >=", value, "pkeyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyTypeGreaterThanOrEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_TYPE >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyTypeLessThan(String value) {
            addCriterion("PKEY_TYPE <", value, "pkeyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyTypeLessThanColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_TYPE < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyTypeLessThanOrEqualTo(String value) {
            addCriterion("PKEY_TYPE <=", value, "pkeyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andPkeyTypeLessThanOrEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("PKEY_TYPE <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPkeyTypeLike(String value) {
            addCriterion("PKEY_TYPE like", value, "pkeyType");
            return (Criteria) this;
        }

        public Criteria andPkeyTypeNotLike(String value) {
            addCriterion("PKEY_TYPE not like", value, "pkeyType");
            return (Criteria) this;
        }

        public Criteria andPkeyTypeIn(List<String> values) {
            addCriterion("PKEY_TYPE in", values, "pkeyType");
            return (Criteria) this;
        }

        public Criteria andPkeyTypeNotIn(List<String> values) {
            addCriterion("PKEY_TYPE not in", values, "pkeyType");
            return (Criteria) this;
        }

        public Criteria andPkeyTypeBetween(String value1, String value2) {
            addCriterion("PKEY_TYPE between", value1, value2, "pkeyType");
            return (Criteria) this;
        }

        public Criteria andPkeyTypeNotBetween(String value1, String value2) {
            addCriterion("PKEY_TYPE not between", value1, value2, "pkeyType");
            return (Criteria) this;
        }

        public Criteria andIntegerIdxIsNull() {
            addCriterion("INTEGER_IDX is null");
            return (Criteria) this;
        }

        public Criteria andIntegerIdxIsNotNull() {
            addCriterion("INTEGER_IDX is not null");
            return (Criteria) this;
        }

        public Criteria andIntegerIdxEqualTo(Integer value) {
            addCriterion("INTEGER_IDX =", value, "integerIdx");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andIntegerIdxEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("INTEGER_IDX = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIntegerIdxNotEqualTo(Integer value) {
            addCriterion("INTEGER_IDX <>", value, "integerIdx");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andIntegerIdxNotEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("INTEGER_IDX <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIntegerIdxGreaterThan(Integer value) {
            addCriterion("INTEGER_IDX >", value, "integerIdx");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andIntegerIdxGreaterThanColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("INTEGER_IDX > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIntegerIdxGreaterThanOrEqualTo(Integer value) {
            addCriterion("INTEGER_IDX >=", value, "integerIdx");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andIntegerIdxGreaterThanOrEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("INTEGER_IDX >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIntegerIdxLessThan(Integer value) {
            addCriterion("INTEGER_IDX <", value, "integerIdx");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andIntegerIdxLessThanColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("INTEGER_IDX < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIntegerIdxLessThanOrEqualTo(Integer value) {
            addCriterion("INTEGER_IDX <=", value, "integerIdx");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria andIntegerIdxLessThanOrEqualToColumn(TbPartitionKeys.Column column) {
            addCriterion(new StringBuilder("INTEGER_IDX <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIntegerIdxIn(List<Integer> values) {
            addCriterion("INTEGER_IDX in", values, "integerIdx");
            return (Criteria) this;
        }

        public Criteria andIntegerIdxNotIn(List<Integer> values) {
            addCriterion("INTEGER_IDX not in", values, "integerIdx");
            return (Criteria) this;
        }

        public Criteria andIntegerIdxBetween(Integer value1, Integer value2) {
            addCriterion("INTEGER_IDX between", value1, value2, "integerIdx");
            return (Criteria) this;
        }

        public Criteria andIntegerIdxNotBetween(Integer value1, Integer value2) {
            addCriterion("INTEGER_IDX not between", value1, value2, "integerIdx");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        private TbPartitionKeysExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        protected Criteria(TbPartitionKeysExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public TbPartitionKeysExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PARTITION_KEYS
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table PARTITION_KEYS
         *
         * @mbg.generated
         */
        void example(com.qmtec.servicecore.entity.example.TbPartitionKeysExample example);
    }
}