package com.qmtec.servicecore.entity.example;

import com.qmtec.servicecore.entity.TbIDXS;
import java.util.ArrayList;
import java.util.List;

public class TbIDXSExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    protected Integer offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    protected Integer rows;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public TbIDXSExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public TbIDXSExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public TbIDXSExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        rows = null;
        offset = null;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TbIDXSExample example = new TbIDXSExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public TbIDXSExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public TbIDXSExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public void setRows(Integer rows) {
        this.rows = rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public Integer getRows() {
        return this.rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public TbIDXSExample limit(Integer rows) {
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public TbIDXSExample limit(Integer offset, Integer rows) {
        this.offset = offset;
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public TbIDXSExample page(Integer page, Integer pageSize) {
        this.offset = page * pageSize;
        this.rows = pageSize;
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIndexIdIsNull() {
            addCriterion("INDEX_ID is null");
            return (Criteria) this;
        }

        public Criteria andIndexIdIsNotNull() {
            addCriterion("INDEX_ID is not null");
            return (Criteria) this;
        }

        public Criteria andIndexIdEqualTo(Long value) {
            addCriterion("INDEX_ID =", value, "indexId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexIdEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexIdNotEqualTo(Long value) {
            addCriterion("INDEX_ID <>", value, "indexId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexIdNotEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexIdGreaterThan(Long value) {
            addCriterion("INDEX_ID >", value, "indexId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexIdGreaterThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexIdGreaterThanOrEqualTo(Long value) {
            addCriterion("INDEX_ID >=", value, "indexId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexIdGreaterThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexIdLessThan(Long value) {
            addCriterion("INDEX_ID <", value, "indexId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexIdLessThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexIdLessThanOrEqualTo(Long value) {
            addCriterion("INDEX_ID <=", value, "indexId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexIdLessThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexIdIn(List<Long> values) {
            addCriterion("INDEX_ID in", values, "indexId");
            return (Criteria) this;
        }

        public Criteria andIndexIdNotIn(List<Long> values) {
            addCriterion("INDEX_ID not in", values, "indexId");
            return (Criteria) this;
        }

        public Criteria andIndexIdBetween(Long value1, Long value2) {
            addCriterion("INDEX_ID between", value1, value2, "indexId");
            return (Criteria) this;
        }

        public Criteria andIndexIdNotBetween(Long value1, Long value2) {
            addCriterion("INDEX_ID not between", value1, value2, "indexId");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Integer value) {
            addCriterion("CREATE_TIME =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Integer value) {
            addCriterion("CREATE_TIME <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Integer value) {
            addCriterion("CREATE_TIME >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("CREATE_TIME >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Integer value) {
            addCriterion("CREATE_TIME <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Integer value) {
            addCriterion("CREATE_TIME <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Integer> values) {
            addCriterion("CREATE_TIME in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Integer> values) {
            addCriterion("CREATE_TIME not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Integer value1, Integer value2) {
            addCriterion("CREATE_TIME between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("CREATE_TIME not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andDeferredRebuildIsNull() {
            addCriterion("DEFERRED_REBUILD is null");
            return (Criteria) this;
        }

        public Criteria andDeferredRebuildIsNotNull() {
            addCriterion("DEFERRED_REBUILD is not null");
            return (Criteria) this;
        }

        public Criteria andDeferredRebuildEqualTo(Boolean value) {
            addCriterion("DEFERRED_REBUILD =", value, "deferredRebuild");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andDeferredRebuildEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("DEFERRED_REBUILD = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredRebuildNotEqualTo(Boolean value) {
            addCriterion("DEFERRED_REBUILD <>", value, "deferredRebuild");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andDeferredRebuildNotEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("DEFERRED_REBUILD <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredRebuildGreaterThan(Boolean value) {
            addCriterion("DEFERRED_REBUILD >", value, "deferredRebuild");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andDeferredRebuildGreaterThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("DEFERRED_REBUILD > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredRebuildGreaterThanOrEqualTo(Boolean value) {
            addCriterion("DEFERRED_REBUILD >=", value, "deferredRebuild");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andDeferredRebuildGreaterThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("DEFERRED_REBUILD >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredRebuildLessThan(Boolean value) {
            addCriterion("DEFERRED_REBUILD <", value, "deferredRebuild");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andDeferredRebuildLessThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("DEFERRED_REBUILD < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredRebuildLessThanOrEqualTo(Boolean value) {
            addCriterion("DEFERRED_REBUILD <=", value, "deferredRebuild");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andDeferredRebuildLessThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("DEFERRED_REBUILD <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredRebuildIn(List<Boolean> values) {
            addCriterion("DEFERRED_REBUILD in", values, "deferredRebuild");
            return (Criteria) this;
        }

        public Criteria andDeferredRebuildNotIn(List<Boolean> values) {
            addCriterion("DEFERRED_REBUILD not in", values, "deferredRebuild");
            return (Criteria) this;
        }

        public Criteria andDeferredRebuildBetween(Boolean value1, Boolean value2) {
            addCriterion("DEFERRED_REBUILD between", value1, value2, "deferredRebuild");
            return (Criteria) this;
        }

        public Criteria andDeferredRebuildNotBetween(Boolean value1, Boolean value2) {
            addCriterion("DEFERRED_REBUILD not between", value1, value2, "deferredRebuild");
            return (Criteria) this;
        }

        public Criteria andIndexHandlerClassIsNull() {
            addCriterion("INDEX_HANDLER_CLASS is null");
            return (Criteria) this;
        }

        public Criteria andIndexHandlerClassIsNotNull() {
            addCriterion("INDEX_HANDLER_CLASS is not null");
            return (Criteria) this;
        }

        public Criteria andIndexHandlerClassEqualTo(String value) {
            addCriterion("INDEX_HANDLER_CLASS =", value, "indexHandlerClass");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexHandlerClassEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_HANDLER_CLASS = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexHandlerClassNotEqualTo(String value) {
            addCriterion("INDEX_HANDLER_CLASS <>", value, "indexHandlerClass");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexHandlerClassNotEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_HANDLER_CLASS <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexHandlerClassGreaterThan(String value) {
            addCriterion("INDEX_HANDLER_CLASS >", value, "indexHandlerClass");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexHandlerClassGreaterThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_HANDLER_CLASS > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexHandlerClassGreaterThanOrEqualTo(String value) {
            addCriterion("INDEX_HANDLER_CLASS >=", value, "indexHandlerClass");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexHandlerClassGreaterThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_HANDLER_CLASS >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexHandlerClassLessThan(String value) {
            addCriterion("INDEX_HANDLER_CLASS <", value, "indexHandlerClass");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexHandlerClassLessThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_HANDLER_CLASS < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexHandlerClassLessThanOrEqualTo(String value) {
            addCriterion("INDEX_HANDLER_CLASS <=", value, "indexHandlerClass");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexHandlerClassLessThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_HANDLER_CLASS <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexHandlerClassLike(String value) {
            addCriterion("INDEX_HANDLER_CLASS like", value, "indexHandlerClass");
            return (Criteria) this;
        }

        public Criteria andIndexHandlerClassNotLike(String value) {
            addCriterion("INDEX_HANDLER_CLASS not like", value, "indexHandlerClass");
            return (Criteria) this;
        }

        public Criteria andIndexHandlerClassIn(List<String> values) {
            addCriterion("INDEX_HANDLER_CLASS in", values, "indexHandlerClass");
            return (Criteria) this;
        }

        public Criteria andIndexHandlerClassNotIn(List<String> values) {
            addCriterion("INDEX_HANDLER_CLASS not in", values, "indexHandlerClass");
            return (Criteria) this;
        }

        public Criteria andIndexHandlerClassBetween(String value1, String value2) {
            addCriterion("INDEX_HANDLER_CLASS between", value1, value2, "indexHandlerClass");
            return (Criteria) this;
        }

        public Criteria andIndexHandlerClassNotBetween(String value1, String value2) {
            addCriterion("INDEX_HANDLER_CLASS not between", value1, value2, "indexHandlerClass");
            return (Criteria) this;
        }

        public Criteria andIndexNameIsNull() {
            addCriterion("INDEX_NAME is null");
            return (Criteria) this;
        }

        public Criteria andIndexNameIsNotNull() {
            addCriterion("INDEX_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andIndexNameEqualTo(String value) {
            addCriterion("INDEX_NAME =", value, "indexName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexNameEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_NAME = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexNameNotEqualTo(String value) {
            addCriterion("INDEX_NAME <>", value, "indexName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexNameNotEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_NAME <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexNameGreaterThan(String value) {
            addCriterion("INDEX_NAME >", value, "indexName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexNameGreaterThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_NAME > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexNameGreaterThanOrEqualTo(String value) {
            addCriterion("INDEX_NAME >=", value, "indexName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexNameGreaterThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_NAME >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexNameLessThan(String value) {
            addCriterion("INDEX_NAME <", value, "indexName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexNameLessThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_NAME < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexNameLessThanOrEqualTo(String value) {
            addCriterion("INDEX_NAME <=", value, "indexName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexNameLessThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_NAME <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexNameLike(String value) {
            addCriterion("INDEX_NAME like", value, "indexName");
            return (Criteria) this;
        }

        public Criteria andIndexNameNotLike(String value) {
            addCriterion("INDEX_NAME not like", value, "indexName");
            return (Criteria) this;
        }

        public Criteria andIndexNameIn(List<String> values) {
            addCriterion("INDEX_NAME in", values, "indexName");
            return (Criteria) this;
        }

        public Criteria andIndexNameNotIn(List<String> values) {
            addCriterion("INDEX_NAME not in", values, "indexName");
            return (Criteria) this;
        }

        public Criteria andIndexNameBetween(String value1, String value2) {
            addCriterion("INDEX_NAME between", value1, value2, "indexName");
            return (Criteria) this;
        }

        public Criteria andIndexNameNotBetween(String value1, String value2) {
            addCriterion("INDEX_NAME not between", value1, value2, "indexName");
            return (Criteria) this;
        }

        public Criteria andIndexTblIdIsNull() {
            addCriterion("INDEX_TBL_ID is null");
            return (Criteria) this;
        }

        public Criteria andIndexTblIdIsNotNull() {
            addCriterion("INDEX_TBL_ID is not null");
            return (Criteria) this;
        }

        public Criteria andIndexTblIdEqualTo(Long value) {
            addCriterion("INDEX_TBL_ID =", value, "indexTblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexTblIdEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_TBL_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexTblIdNotEqualTo(Long value) {
            addCriterion("INDEX_TBL_ID <>", value, "indexTblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexTblIdNotEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_TBL_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexTblIdGreaterThan(Long value) {
            addCriterion("INDEX_TBL_ID >", value, "indexTblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexTblIdGreaterThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_TBL_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexTblIdGreaterThanOrEqualTo(Long value) {
            addCriterion("INDEX_TBL_ID >=", value, "indexTblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexTblIdGreaterThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_TBL_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexTblIdLessThan(Long value) {
            addCriterion("INDEX_TBL_ID <", value, "indexTblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexTblIdLessThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_TBL_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexTblIdLessThanOrEqualTo(Long value) {
            addCriterion("INDEX_TBL_ID <=", value, "indexTblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andIndexTblIdLessThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("INDEX_TBL_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndexTblIdIn(List<Long> values) {
            addCriterion("INDEX_TBL_ID in", values, "indexTblId");
            return (Criteria) this;
        }

        public Criteria andIndexTblIdNotIn(List<Long> values) {
            addCriterion("INDEX_TBL_ID not in", values, "indexTblId");
            return (Criteria) this;
        }

        public Criteria andIndexTblIdBetween(Long value1, Long value2) {
            addCriterion("INDEX_TBL_ID between", value1, value2, "indexTblId");
            return (Criteria) this;
        }

        public Criteria andIndexTblIdNotBetween(Long value1, Long value2) {
            addCriterion("INDEX_TBL_ID not between", value1, value2, "indexTblId");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeIsNull() {
            addCriterion("LAST_ACCESS_TIME is null");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeIsNotNull() {
            addCriterion("LAST_ACCESS_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeEqualTo(Integer value) {
            addCriterion("LAST_ACCESS_TIME =", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeNotEqualTo(Integer value) {
            addCriterion("LAST_ACCESS_TIME <>", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeNotEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeGreaterThan(Integer value) {
            addCriterion("LAST_ACCESS_TIME >", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeGreaterThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("LAST_ACCESS_TIME >=", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeGreaterThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeLessThan(Integer value) {
            addCriterion("LAST_ACCESS_TIME <", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeLessThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeLessThanOrEqualTo(Integer value) {
            addCriterion("LAST_ACCESS_TIME <=", value, "lastAccessTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andLastAccessTimeLessThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("LAST_ACCESS_TIME <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeIn(List<Integer> values) {
            addCriterion("LAST_ACCESS_TIME in", values, "lastAccessTime");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeNotIn(List<Integer> values) {
            addCriterion("LAST_ACCESS_TIME not in", values, "lastAccessTime");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeBetween(Integer value1, Integer value2) {
            addCriterion("LAST_ACCESS_TIME between", value1, value2, "lastAccessTime");
            return (Criteria) this;
        }

        public Criteria andLastAccessTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("LAST_ACCESS_TIME not between", value1, value2, "lastAccessTime");
            return (Criteria) this;
        }

        public Criteria andOrigTblIdIsNull() {
            addCriterion("ORIG_TBL_ID is null");
            return (Criteria) this;
        }

        public Criteria andOrigTblIdIsNotNull() {
            addCriterion("ORIG_TBL_ID is not null");
            return (Criteria) this;
        }

        public Criteria andOrigTblIdEqualTo(Long value) {
            addCriterion("ORIG_TBL_ID =", value, "origTblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andOrigTblIdEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("ORIG_TBL_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrigTblIdNotEqualTo(Long value) {
            addCriterion("ORIG_TBL_ID <>", value, "origTblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andOrigTblIdNotEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("ORIG_TBL_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrigTblIdGreaterThan(Long value) {
            addCriterion("ORIG_TBL_ID >", value, "origTblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andOrigTblIdGreaterThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("ORIG_TBL_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrigTblIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ORIG_TBL_ID >=", value, "origTblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andOrigTblIdGreaterThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("ORIG_TBL_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrigTblIdLessThan(Long value) {
            addCriterion("ORIG_TBL_ID <", value, "origTblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andOrigTblIdLessThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("ORIG_TBL_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrigTblIdLessThanOrEqualTo(Long value) {
            addCriterion("ORIG_TBL_ID <=", value, "origTblId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andOrigTblIdLessThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("ORIG_TBL_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrigTblIdIn(List<Long> values) {
            addCriterion("ORIG_TBL_ID in", values, "origTblId");
            return (Criteria) this;
        }

        public Criteria andOrigTblIdNotIn(List<Long> values) {
            addCriterion("ORIG_TBL_ID not in", values, "origTblId");
            return (Criteria) this;
        }

        public Criteria andOrigTblIdBetween(Long value1, Long value2) {
            addCriterion("ORIG_TBL_ID between", value1, value2, "origTblId");
            return (Criteria) this;
        }

        public Criteria andOrigTblIdNotBetween(Long value1, Long value2) {
            addCriterion("ORIG_TBL_ID not between", value1, value2, "origTblId");
            return (Criteria) this;
        }

        public Criteria andSdIdIsNull() {
            addCriterion("SD_ID is null");
            return (Criteria) this;
        }

        public Criteria andSdIdIsNotNull() {
            addCriterion("SD_ID is not null");
            return (Criteria) this;
        }

        public Criteria andSdIdEqualTo(Long value) {
            addCriterion("SD_ID =", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andSdIdEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("SD_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdNotEqualTo(Long value) {
            addCriterion("SD_ID <>", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andSdIdNotEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("SD_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdGreaterThan(Long value) {
            addCriterion("SD_ID >", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andSdIdGreaterThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("SD_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdGreaterThanOrEqualTo(Long value) {
            addCriterion("SD_ID >=", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andSdIdGreaterThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("SD_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdLessThan(Long value) {
            addCriterion("SD_ID <", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andSdIdLessThanColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("SD_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdLessThanOrEqualTo(Long value) {
            addCriterion("SD_ID <=", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria andSdIdLessThanOrEqualToColumn(TbIDXS.Column column) {
            addCriterion(new StringBuilder("SD_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdIn(List<Long> values) {
            addCriterion("SD_ID in", values, "sdId");
            return (Criteria) this;
        }

        public Criteria andSdIdNotIn(List<Long> values) {
            addCriterion("SD_ID not in", values, "sdId");
            return (Criteria) this;
        }

        public Criteria andSdIdBetween(Long value1, Long value2) {
            addCriterion("SD_ID between", value1, value2, "sdId");
            return (Criteria) this;
        }

        public Criteria andSdIdNotBetween(Long value1, Long value2) {
            addCriterion("SD_ID not between", value1, value2, "sdId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table IDXS
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        private TbIDXSExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        protected Criteria(TbIDXSExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public TbIDXSExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table IDXS
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table IDXS
         *
         * @mbg.generated
         */
        void example(com.qmtec.servicecore.entity.example.TbIDXSExample example);
    }
}