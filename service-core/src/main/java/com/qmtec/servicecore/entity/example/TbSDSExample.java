package com.qmtec.servicecore.entity.example;

import com.qmtec.servicecore.entity.TbSDS;
import java.util.ArrayList;
import java.util.List;

public class TbSDSExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SDS
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SDS
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SDS
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SDS
     *
     * @mbg.generated
     */
    protected Integer offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SDS
     *
     * @mbg.generated
     */
    protected Integer rows;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public TbSDSExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public TbSDSExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public TbSDSExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        rows = null;
        offset = null;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TbSDSExample example = new TbSDSExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public TbSDSExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public TbSDSExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public void setRows(Integer rows) {
        this.rows = rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public Integer getRows() {
        return this.rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public TbSDSExample limit(Integer rows) {
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public TbSDSExample limit(Integer offset, Integer rows) {
        this.offset = offset;
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public TbSDSExample page(Integer page, Integer pageSize) {
        this.offset = page * pageSize;
        this.rows = pageSize;
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SDS
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSdIdIsNull() {
            addCriterion("SD_ID is null");
            return (Criteria) this;
        }

        public Criteria andSdIdIsNotNull() {
            addCriterion("SD_ID is not null");
            return (Criteria) this;
        }

        public Criteria andSdIdEqualTo(Long value) {
            addCriterion("SD_ID =", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andSdIdEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("SD_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdNotEqualTo(Long value) {
            addCriterion("SD_ID <>", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andSdIdNotEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("SD_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdGreaterThan(Long value) {
            addCriterion("SD_ID >", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andSdIdGreaterThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("SD_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdGreaterThanOrEqualTo(Long value) {
            addCriterion("SD_ID >=", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andSdIdGreaterThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("SD_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdLessThan(Long value) {
            addCriterion("SD_ID <", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andSdIdLessThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("SD_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdLessThanOrEqualTo(Long value) {
            addCriterion("SD_ID <=", value, "sdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andSdIdLessThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("SD_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSdIdIn(List<Long> values) {
            addCriterion("SD_ID in", values, "sdId");
            return (Criteria) this;
        }

        public Criteria andSdIdNotIn(List<Long> values) {
            addCriterion("SD_ID not in", values, "sdId");
            return (Criteria) this;
        }

        public Criteria andSdIdBetween(Long value1, Long value2) {
            addCriterion("SD_ID between", value1, value2, "sdId");
            return (Criteria) this;
        }

        public Criteria andSdIdNotBetween(Long value1, Long value2) {
            addCriterion("SD_ID not between", value1, value2, "sdId");
            return (Criteria) this;
        }

        public Criteria andCdIdIsNull() {
            addCriterion("CD_ID is null");
            return (Criteria) this;
        }

        public Criteria andCdIdIsNotNull() {
            addCriterion("CD_ID is not null");
            return (Criteria) this;
        }

        public Criteria andCdIdEqualTo(Long value) {
            addCriterion("CD_ID =", value, "cdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andCdIdEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("CD_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCdIdNotEqualTo(Long value) {
            addCriterion("CD_ID <>", value, "cdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andCdIdNotEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("CD_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCdIdGreaterThan(Long value) {
            addCriterion("CD_ID >", value, "cdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andCdIdGreaterThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("CD_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCdIdGreaterThanOrEqualTo(Long value) {
            addCriterion("CD_ID >=", value, "cdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andCdIdGreaterThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("CD_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCdIdLessThan(Long value) {
            addCriterion("CD_ID <", value, "cdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andCdIdLessThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("CD_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCdIdLessThanOrEqualTo(Long value) {
            addCriterion("CD_ID <=", value, "cdId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andCdIdLessThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("CD_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCdIdIn(List<Long> values) {
            addCriterion("CD_ID in", values, "cdId");
            return (Criteria) this;
        }

        public Criteria andCdIdNotIn(List<Long> values) {
            addCriterion("CD_ID not in", values, "cdId");
            return (Criteria) this;
        }

        public Criteria andCdIdBetween(Long value1, Long value2) {
            addCriterion("CD_ID between", value1, value2, "cdId");
            return (Criteria) this;
        }

        public Criteria andCdIdNotBetween(Long value1, Long value2) {
            addCriterion("CD_ID not between", value1, value2, "cdId");
            return (Criteria) this;
        }

        public Criteria andInputFormatIsNull() {
            addCriterion("INPUT_FORMAT is null");
            return (Criteria) this;
        }

        public Criteria andInputFormatIsNotNull() {
            addCriterion("INPUT_FORMAT is not null");
            return (Criteria) this;
        }

        public Criteria andInputFormatEqualTo(String value) {
            addCriterion("INPUT_FORMAT =", value, "inputFormat");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andInputFormatEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("INPUT_FORMAT = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInputFormatNotEqualTo(String value) {
            addCriterion("INPUT_FORMAT <>", value, "inputFormat");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andInputFormatNotEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("INPUT_FORMAT <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInputFormatGreaterThan(String value) {
            addCriterion("INPUT_FORMAT >", value, "inputFormat");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andInputFormatGreaterThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("INPUT_FORMAT > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInputFormatGreaterThanOrEqualTo(String value) {
            addCriterion("INPUT_FORMAT >=", value, "inputFormat");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andInputFormatGreaterThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("INPUT_FORMAT >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInputFormatLessThan(String value) {
            addCriterion("INPUT_FORMAT <", value, "inputFormat");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andInputFormatLessThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("INPUT_FORMAT < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInputFormatLessThanOrEqualTo(String value) {
            addCriterion("INPUT_FORMAT <=", value, "inputFormat");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andInputFormatLessThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("INPUT_FORMAT <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInputFormatLike(String value) {
            addCriterion("INPUT_FORMAT like", value, "inputFormat");
            return (Criteria) this;
        }

        public Criteria andInputFormatNotLike(String value) {
            addCriterion("INPUT_FORMAT not like", value, "inputFormat");
            return (Criteria) this;
        }

        public Criteria andInputFormatIn(List<String> values) {
            addCriterion("INPUT_FORMAT in", values, "inputFormat");
            return (Criteria) this;
        }

        public Criteria andInputFormatNotIn(List<String> values) {
            addCriterion("INPUT_FORMAT not in", values, "inputFormat");
            return (Criteria) this;
        }

        public Criteria andInputFormatBetween(String value1, String value2) {
            addCriterion("INPUT_FORMAT between", value1, value2, "inputFormat");
            return (Criteria) this;
        }

        public Criteria andInputFormatNotBetween(String value1, String value2) {
            addCriterion("INPUT_FORMAT not between", value1, value2, "inputFormat");
            return (Criteria) this;
        }

        public Criteria andIsCompressedIsNull() {
            addCriterion("IS_COMPRESSED is null");
            return (Criteria) this;
        }

        public Criteria andIsCompressedIsNotNull() {
            addCriterion("IS_COMPRESSED is not null");
            return (Criteria) this;
        }

        public Criteria andIsCompressedEqualTo(Boolean value) {
            addCriterion("IS_COMPRESSED =", value, "isCompressed");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andIsCompressedEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("IS_COMPRESSED = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCompressedNotEqualTo(Boolean value) {
            addCriterion("IS_COMPRESSED <>", value, "isCompressed");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andIsCompressedNotEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("IS_COMPRESSED <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCompressedGreaterThan(Boolean value) {
            addCriterion("IS_COMPRESSED >", value, "isCompressed");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andIsCompressedGreaterThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("IS_COMPRESSED > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCompressedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("IS_COMPRESSED >=", value, "isCompressed");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andIsCompressedGreaterThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("IS_COMPRESSED >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCompressedLessThan(Boolean value) {
            addCriterion("IS_COMPRESSED <", value, "isCompressed");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andIsCompressedLessThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("IS_COMPRESSED < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCompressedLessThanOrEqualTo(Boolean value) {
            addCriterion("IS_COMPRESSED <=", value, "isCompressed");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andIsCompressedLessThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("IS_COMPRESSED <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsCompressedIn(List<Boolean> values) {
            addCriterion("IS_COMPRESSED in", values, "isCompressed");
            return (Criteria) this;
        }

        public Criteria andIsCompressedNotIn(List<Boolean> values) {
            addCriterion("IS_COMPRESSED not in", values, "isCompressed");
            return (Criteria) this;
        }

        public Criteria andIsCompressedBetween(Boolean value1, Boolean value2) {
            addCriterion("IS_COMPRESSED between", value1, value2, "isCompressed");
            return (Criteria) this;
        }

        public Criteria andIsCompressedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("IS_COMPRESSED not between", value1, value2, "isCompressed");
            return (Criteria) this;
        }

        public Criteria andIsStoredassubdirectoriesIsNull() {
            addCriterion("IS_STOREDASSUBDIRECTORIES is null");
            return (Criteria) this;
        }

        public Criteria andIsStoredassubdirectoriesIsNotNull() {
            addCriterion("IS_STOREDASSUBDIRECTORIES is not null");
            return (Criteria) this;
        }

        public Criteria andIsStoredassubdirectoriesEqualTo(Boolean value) {
            addCriterion("IS_STOREDASSUBDIRECTORIES =", value, "isStoredassubdirectories");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andIsStoredassubdirectoriesEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("IS_STOREDASSUBDIRECTORIES = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsStoredassubdirectoriesNotEqualTo(Boolean value) {
            addCriterion("IS_STOREDASSUBDIRECTORIES <>", value, "isStoredassubdirectories");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andIsStoredassubdirectoriesNotEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("IS_STOREDASSUBDIRECTORIES <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsStoredassubdirectoriesGreaterThan(Boolean value) {
            addCriterion("IS_STOREDASSUBDIRECTORIES >", value, "isStoredassubdirectories");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andIsStoredassubdirectoriesGreaterThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("IS_STOREDASSUBDIRECTORIES > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsStoredassubdirectoriesGreaterThanOrEqualTo(Boolean value) {
            addCriterion("IS_STOREDASSUBDIRECTORIES >=", value, "isStoredassubdirectories");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andIsStoredassubdirectoriesGreaterThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("IS_STOREDASSUBDIRECTORIES >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsStoredassubdirectoriesLessThan(Boolean value) {
            addCriterion("IS_STOREDASSUBDIRECTORIES <", value, "isStoredassubdirectories");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andIsStoredassubdirectoriesLessThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("IS_STOREDASSUBDIRECTORIES < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsStoredassubdirectoriesLessThanOrEqualTo(Boolean value) {
            addCriterion("IS_STOREDASSUBDIRECTORIES <=", value, "isStoredassubdirectories");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andIsStoredassubdirectoriesLessThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("IS_STOREDASSUBDIRECTORIES <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsStoredassubdirectoriesIn(List<Boolean> values) {
            addCriterion("IS_STOREDASSUBDIRECTORIES in", values, "isStoredassubdirectories");
            return (Criteria) this;
        }

        public Criteria andIsStoredassubdirectoriesNotIn(List<Boolean> values) {
            addCriterion("IS_STOREDASSUBDIRECTORIES not in", values, "isStoredassubdirectories");
            return (Criteria) this;
        }

        public Criteria andIsStoredassubdirectoriesBetween(Boolean value1, Boolean value2) {
            addCriterion("IS_STOREDASSUBDIRECTORIES between", value1, value2, "isStoredassubdirectories");
            return (Criteria) this;
        }

        public Criteria andIsStoredassubdirectoriesNotBetween(Boolean value1, Boolean value2) {
            addCriterion("IS_STOREDASSUBDIRECTORIES not between", value1, value2, "isStoredassubdirectories");
            return (Criteria) this;
        }

        public Criteria andLocationIsNull() {
            addCriterion("`LOCATION` is null");
            return (Criteria) this;
        }

        public Criteria andLocationIsNotNull() {
            addCriterion("`LOCATION` is not null");
            return (Criteria) this;
        }

        public Criteria andLocationEqualTo(String value) {
            addCriterion("`LOCATION` =", value, "location");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andLocationEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("`LOCATION` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLocationNotEqualTo(String value) {
            addCriterion("`LOCATION` <>", value, "location");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andLocationNotEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("`LOCATION` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLocationGreaterThan(String value) {
            addCriterion("`LOCATION` >", value, "location");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andLocationGreaterThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("`LOCATION` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLocationGreaterThanOrEqualTo(String value) {
            addCriterion("`LOCATION` >=", value, "location");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andLocationGreaterThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("`LOCATION` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLocationLessThan(String value) {
            addCriterion("`LOCATION` <", value, "location");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andLocationLessThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("`LOCATION` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLocationLessThanOrEqualTo(String value) {
            addCriterion("`LOCATION` <=", value, "location");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andLocationLessThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("`LOCATION` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLocationLike(String value) {
            addCriterion("`LOCATION` like", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotLike(String value) {
            addCriterion("`LOCATION` not like", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationIn(List<String> values) {
            addCriterion("`LOCATION` in", values, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotIn(List<String> values) {
            addCriterion("`LOCATION` not in", values, "location");
            return (Criteria) this;
        }

        public Criteria andLocationBetween(String value1, String value2) {
            addCriterion("`LOCATION` between", value1, value2, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotBetween(String value1, String value2) {
            addCriterion("`LOCATION` not between", value1, value2, "location");
            return (Criteria) this;
        }

        public Criteria andNumBucketsIsNull() {
            addCriterion("NUM_BUCKETS is null");
            return (Criteria) this;
        }

        public Criteria andNumBucketsIsNotNull() {
            addCriterion("NUM_BUCKETS is not null");
            return (Criteria) this;
        }

        public Criteria andNumBucketsEqualTo(Integer value) {
            addCriterion("NUM_BUCKETS =", value, "numBuckets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andNumBucketsEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("NUM_BUCKETS = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumBucketsNotEqualTo(Integer value) {
            addCriterion("NUM_BUCKETS <>", value, "numBuckets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andNumBucketsNotEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("NUM_BUCKETS <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumBucketsGreaterThan(Integer value) {
            addCriterion("NUM_BUCKETS >", value, "numBuckets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andNumBucketsGreaterThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("NUM_BUCKETS > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumBucketsGreaterThanOrEqualTo(Integer value) {
            addCriterion("NUM_BUCKETS >=", value, "numBuckets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andNumBucketsGreaterThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("NUM_BUCKETS >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumBucketsLessThan(Integer value) {
            addCriterion("NUM_BUCKETS <", value, "numBuckets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andNumBucketsLessThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("NUM_BUCKETS < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumBucketsLessThanOrEqualTo(Integer value) {
            addCriterion("NUM_BUCKETS <=", value, "numBuckets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andNumBucketsLessThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("NUM_BUCKETS <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumBucketsIn(List<Integer> values) {
            addCriterion("NUM_BUCKETS in", values, "numBuckets");
            return (Criteria) this;
        }

        public Criteria andNumBucketsNotIn(List<Integer> values) {
            addCriterion("NUM_BUCKETS not in", values, "numBuckets");
            return (Criteria) this;
        }

        public Criteria andNumBucketsBetween(Integer value1, Integer value2) {
            addCriterion("NUM_BUCKETS between", value1, value2, "numBuckets");
            return (Criteria) this;
        }

        public Criteria andNumBucketsNotBetween(Integer value1, Integer value2) {
            addCriterion("NUM_BUCKETS not between", value1, value2, "numBuckets");
            return (Criteria) this;
        }

        public Criteria andOutputFormatIsNull() {
            addCriterion("OUTPUT_FORMAT is null");
            return (Criteria) this;
        }

        public Criteria andOutputFormatIsNotNull() {
            addCriterion("OUTPUT_FORMAT is not null");
            return (Criteria) this;
        }

        public Criteria andOutputFormatEqualTo(String value) {
            addCriterion("OUTPUT_FORMAT =", value, "outputFormat");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andOutputFormatEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("OUTPUT_FORMAT = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutputFormatNotEqualTo(String value) {
            addCriterion("OUTPUT_FORMAT <>", value, "outputFormat");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andOutputFormatNotEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("OUTPUT_FORMAT <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutputFormatGreaterThan(String value) {
            addCriterion("OUTPUT_FORMAT >", value, "outputFormat");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andOutputFormatGreaterThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("OUTPUT_FORMAT > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutputFormatGreaterThanOrEqualTo(String value) {
            addCriterion("OUTPUT_FORMAT >=", value, "outputFormat");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andOutputFormatGreaterThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("OUTPUT_FORMAT >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutputFormatLessThan(String value) {
            addCriterion("OUTPUT_FORMAT <", value, "outputFormat");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andOutputFormatLessThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("OUTPUT_FORMAT < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutputFormatLessThanOrEqualTo(String value) {
            addCriterion("OUTPUT_FORMAT <=", value, "outputFormat");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andOutputFormatLessThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("OUTPUT_FORMAT <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutputFormatLike(String value) {
            addCriterion("OUTPUT_FORMAT like", value, "outputFormat");
            return (Criteria) this;
        }

        public Criteria andOutputFormatNotLike(String value) {
            addCriterion("OUTPUT_FORMAT not like", value, "outputFormat");
            return (Criteria) this;
        }

        public Criteria andOutputFormatIn(List<String> values) {
            addCriterion("OUTPUT_FORMAT in", values, "outputFormat");
            return (Criteria) this;
        }

        public Criteria andOutputFormatNotIn(List<String> values) {
            addCriterion("OUTPUT_FORMAT not in", values, "outputFormat");
            return (Criteria) this;
        }

        public Criteria andOutputFormatBetween(String value1, String value2) {
            addCriterion("OUTPUT_FORMAT between", value1, value2, "outputFormat");
            return (Criteria) this;
        }

        public Criteria andOutputFormatNotBetween(String value1, String value2) {
            addCriterion("OUTPUT_FORMAT not between", value1, value2, "outputFormat");
            return (Criteria) this;
        }

        public Criteria andSerdeIdIsNull() {
            addCriterion("SERDE_ID is null");
            return (Criteria) this;
        }

        public Criteria andSerdeIdIsNotNull() {
            addCriterion("SERDE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andSerdeIdEqualTo(Long value) {
            addCriterion("SERDE_ID =", value, "serdeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andSerdeIdEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("SERDE_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSerdeIdNotEqualTo(Long value) {
            addCriterion("SERDE_ID <>", value, "serdeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andSerdeIdNotEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("SERDE_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSerdeIdGreaterThan(Long value) {
            addCriterion("SERDE_ID >", value, "serdeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andSerdeIdGreaterThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("SERDE_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSerdeIdGreaterThanOrEqualTo(Long value) {
            addCriterion("SERDE_ID >=", value, "serdeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andSerdeIdGreaterThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("SERDE_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSerdeIdLessThan(Long value) {
            addCriterion("SERDE_ID <", value, "serdeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andSerdeIdLessThanColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("SERDE_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSerdeIdLessThanOrEqualTo(Long value) {
            addCriterion("SERDE_ID <=", value, "serdeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria andSerdeIdLessThanOrEqualToColumn(TbSDS.Column column) {
            addCriterion(new StringBuilder("SERDE_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSerdeIdIn(List<Long> values) {
            addCriterion("SERDE_ID in", values, "serdeId");
            return (Criteria) this;
        }

        public Criteria andSerdeIdNotIn(List<Long> values) {
            addCriterion("SERDE_ID not in", values, "serdeId");
            return (Criteria) this;
        }

        public Criteria andSerdeIdBetween(Long value1, Long value2) {
            addCriterion("SERDE_ID between", value1, value2, "serdeId");
            return (Criteria) this;
        }

        public Criteria andSerdeIdNotBetween(Long value1, Long value2) {
            addCriterion("SERDE_ID not between", value1, value2, "serdeId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SDS
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table SDS
         *
         * @mbg.generated
         */
        private TbSDSExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        protected Criteria(TbSDSExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public TbSDSExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SDS
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SDS
         *
         * @mbg.generated
         */
        void example(com.qmtec.servicecore.entity.example.TbSDSExample example);
    }
}