<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qmtec.servicecore.dao.SourceInfoMapper">
  <resultMap id="BaseResultMap" type="com.qmtec.servicecore.entity.SourceInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="component_name" jdbcType="VARCHAR" property="componentName" />
    <result column="ip_addr" jdbcType="VARCHAR" property="ipAddr" />
    <result column="current_throughput" jdbcType="VARCHAR" property="currentThroughput" />
    <result column="max_throughput" jdbcType="VARCHAR" property="maxThroughput" />
    <result column="event_count" jdbcType="VARCHAR" property="eventCount" />
    <result column="average_throughput" jdbcType="VARCHAR" property="averageThroughput" />
    <result column="run_state" jdbcType="INTEGER" property="runState" />
    <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="event_get_timer" jdbcType="VARCHAR" property="eventGetTimer" />
    <result column="append_batch_accepted_count" jdbcType="VARCHAR" property="appendBatchAcceptedCount" />
    <result column="event_accepted_count" jdbcType="VARCHAR" property="eventAcceptedCount" />
    <result column="append_received_count" jdbcType="VARCHAR" property="appendReceivedCount" />
    <result column="append_batch_received_count" jdbcType="VARCHAR" property="appendBatchReceivedCount" />
    <result column="kafka_commit_timer" jdbcType="VARCHAR" property="kafkaCommitTimer" />
    <result column="event_received_count" jdbcType="VARCHAR" property="eventReceivedCount" />
    <result column="append_accepted_count" jdbcType="VARCHAR" property="appendAcceptedCount" />
    <result column="open_connection_count" jdbcType="VARCHAR" property="openConnectionCount" />
    <result column="kafka_empty_count" jdbcType="VARCHAR" property="kafkaEmptyCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, component_name, ip_addr, current_throughput, max_throughput, event_count, average_throughput, 
    run_state, delete_flag, create_time, modify_time, event_get_timer, append_batch_accepted_count, 
    event_accepted_count, append_received_count, append_batch_received_count, kafka_commit_timer, 
    event_received_count, append_accepted_count, open_connection_count, kafka_empty_count
  </sql>
  <select id="selectByExample" parameterType="com.qmtec.servicecore.entity.example.SourceInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_flume_sourcesInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_flume_sourcesInfo
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_flume_sourcesInfo
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_flume_sourcesInfo
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_flume_sourcesInfo
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qmtec.servicecore.entity.example.SourceInfoExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_flume_sourcesInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qmtec.servicecore.entity.SourceInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_flume_sourcesInfo (id, component_name, ip_addr, 
      current_throughput, max_throughput, event_count, 
      average_throughput, run_state, delete_flag, 
      create_time, modify_time, event_get_timer, 
      append_batch_accepted_count, event_accepted_count, 
      append_received_count, append_batch_received_count, 
      kafka_commit_timer, event_received_count, append_accepted_count, 
      open_connection_count, kafka_empty_count)
    values (#{id,jdbcType=VARCHAR}, #{componentName,jdbcType=VARCHAR}, #{ipAddr,jdbcType=VARCHAR}, 
      #{currentThroughput,jdbcType=VARCHAR}, #{maxThroughput,jdbcType=VARCHAR}, #{eventCount,jdbcType=VARCHAR}, 
      #{averageThroughput,jdbcType=VARCHAR}, #{runState,jdbcType=INTEGER}, #{deleteFlag,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{eventGetTimer,jdbcType=VARCHAR}, 
      #{appendBatchAcceptedCount,jdbcType=VARCHAR}, #{eventAcceptedCount,jdbcType=VARCHAR}, 
      #{appendReceivedCount,jdbcType=VARCHAR}, #{appendBatchReceivedCount,jdbcType=VARCHAR}, 
      #{kafkaCommitTimer,jdbcType=VARCHAR}, #{eventReceivedCount,jdbcType=VARCHAR}, #{appendAcceptedCount,jdbcType=VARCHAR}, 
      #{openConnectionCount,jdbcType=VARCHAR}, #{kafkaEmptyCount,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_flume_sourcesInfo
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.componentName != null">
            component_name,
          </if>
          <if test="record.ipAddr != null">
            ip_addr,
          </if>
          <if test="record.currentThroughput != null">
            current_throughput,
          </if>
          <if test="record.maxThroughput != null">
            max_throughput,
          </if>
          <if test="record.eventCount != null">
            event_count,
          </if>
          <if test="record.averageThroughput != null">
            average_throughput,
          </if>
          <if test="record.runState != null">
            run_state,
          </if>
          <if test="record.deleteFlag != null">
            delete_flag,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.modifyTime != null">
            modify_time,
          </if>
          <if test="record.eventGetTimer != null">
            event_get_timer,
          </if>
          <if test="record.appendBatchAcceptedCount != null">
            append_batch_accepted_count,
          </if>
          <if test="record.eventAcceptedCount != null">
            event_accepted_count,
          </if>
          <if test="record.appendReceivedCount != null">
            append_received_count,
          </if>
          <if test="record.appendBatchReceivedCount != null">
            append_batch_received_count,
          </if>
          <if test="record.kafkaCommitTimer != null">
            kafka_commit_timer,
          </if>
          <if test="record.eventReceivedCount != null">
            event_received_count,
          </if>
          <if test="record.appendAcceptedCount != null">
            append_accepted_count,
          </if>
          <if test="record.openConnectionCount != null">
            open_connection_count,
          </if>
          <if test="record.kafkaEmptyCount != null">
            kafka_empty_count,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=VARCHAR},
          </if>
          <if test="record.componentName != null">
            #{record.componentName,jdbcType=VARCHAR},
          </if>
          <if test="record.ipAddr != null">
            #{record.ipAddr,jdbcType=VARCHAR},
          </if>
          <if test="record.currentThroughput != null">
            #{record.currentThroughput,jdbcType=VARCHAR},
          </if>
          <if test="record.maxThroughput != null">
            #{record.maxThroughput,jdbcType=VARCHAR},
          </if>
          <if test="record.eventCount != null">
            #{record.eventCount,jdbcType=VARCHAR},
          </if>
          <if test="record.averageThroughput != null">
            #{record.averageThroughput,jdbcType=VARCHAR},
          </if>
          <if test="record.runState != null">
            #{record.runState,jdbcType=INTEGER},
          </if>
          <if test="record.deleteFlag != null">
            #{record.deleteFlag,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.modifyTime != null">
            #{record.modifyTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.eventGetTimer != null">
            #{record.eventGetTimer,jdbcType=VARCHAR},
          </if>
          <if test="record.appendBatchAcceptedCount != null">
            #{record.appendBatchAcceptedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.eventAcceptedCount != null">
            #{record.eventAcceptedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.appendReceivedCount != null">
            #{record.appendReceivedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.appendBatchReceivedCount != null">
            #{record.appendBatchReceivedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.kafkaCommitTimer != null">
            #{record.kafkaCommitTimer,jdbcType=VARCHAR},
          </if>
          <if test="record.eventReceivedCount != null">
            #{record.eventReceivedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.appendAcceptedCount != null">
            #{record.appendAcceptedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.openConnectionCount != null">
            #{record.openConnectionCount,jdbcType=VARCHAR},
          </if>
          <if test="record.kafkaEmptyCount != null">
            #{record.kafkaEmptyCount,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.qmtec.servicecore.entity.example.SourceInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from t_flume_sourcesInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_flume_sourcesInfo
    SET
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=VARCHAR},
          </if>
          <if test="record.componentName != null">
            component_name = #{record.componentName,jdbcType=VARCHAR},
          </if>
          <if test="record.ipAddr != null">
            ip_addr = #{record.ipAddr,jdbcType=VARCHAR},
          </if>
          <if test="record.currentThroughput != null">
            current_throughput = #{record.currentThroughput,jdbcType=VARCHAR},
          </if>
          <if test="record.maxThroughput != null">
            max_throughput = #{record.maxThroughput,jdbcType=VARCHAR},
          </if>
          <if test="record.eventCount != null">
            event_count = #{record.eventCount,jdbcType=VARCHAR},
          </if>
          <if test="record.averageThroughput != null">
            average_throughput = #{record.averageThroughput,jdbcType=VARCHAR},
          </if>
          <if test="record.runState != null">
            run_state = #{record.runState,jdbcType=INTEGER},
          </if>
          <if test="record.deleteFlag != null">
            delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.modifyTime != null">
            modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.eventGetTimer != null">
            event_get_timer = #{record.eventGetTimer,jdbcType=VARCHAR},
          </if>
          <if test="record.appendBatchAcceptedCount != null">
            append_batch_accepted_count = #{record.appendBatchAcceptedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.eventAcceptedCount != null">
            event_accepted_count = #{record.eventAcceptedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.appendReceivedCount != null">
            append_received_count = #{record.appendReceivedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.appendBatchReceivedCount != null">
            append_batch_received_count = #{record.appendBatchReceivedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.kafkaCommitTimer != null">
            kafka_commit_timer = #{record.kafkaCommitTimer,jdbcType=VARCHAR},
          </if>
          <if test="record.eventReceivedCount != null">
            event_received_count = #{record.eventReceivedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.appendAcceptedCount != null">
            append_accepted_count = #{record.appendAcceptedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.openConnectionCount != null">
            open_connection_count = #{record.openConnectionCount,jdbcType=VARCHAR},
          </if>
          <if test="record.kafkaEmptyCount != null">
            kafka_empty_count = #{record.kafkaEmptyCount,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_flume_sourcesInfo
    set id = #{record.id,jdbcType=VARCHAR},
      component_name = #{record.componentName,jdbcType=VARCHAR},
      ip_addr = #{record.ipAddr,jdbcType=VARCHAR},
      current_throughput = #{record.currentThroughput,jdbcType=VARCHAR},
      max_throughput = #{record.maxThroughput,jdbcType=VARCHAR},
      event_count = #{record.eventCount,jdbcType=VARCHAR},
      average_throughput = #{record.averageThroughput,jdbcType=VARCHAR},
      run_state = #{record.runState,jdbcType=INTEGER},
      delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      event_get_timer = #{record.eventGetTimer,jdbcType=VARCHAR},
      append_batch_accepted_count = #{record.appendBatchAcceptedCount,jdbcType=VARCHAR},
      event_accepted_count = #{record.eventAcceptedCount,jdbcType=VARCHAR},
      append_received_count = #{record.appendReceivedCount,jdbcType=VARCHAR},
      append_batch_received_count = #{record.appendBatchReceivedCount,jdbcType=VARCHAR},
      kafka_commit_timer = #{record.kafkaCommitTimer,jdbcType=VARCHAR},
      event_received_count = #{record.eventReceivedCount,jdbcType=VARCHAR},
      append_accepted_count = #{record.appendAcceptedCount,jdbcType=VARCHAR},
      open_connection_count = #{record.openConnectionCount,jdbcType=VARCHAR},
      kafka_empty_count = #{record.kafkaEmptyCount,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_flume_sourcesInfo
    SET
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.componentName != null">
            component_name = #{record.componentName,jdbcType=VARCHAR},
          </if>
          <if test="record.ipAddr != null">
            ip_addr = #{record.ipAddr,jdbcType=VARCHAR},
          </if>
          <if test="record.currentThroughput != null">
            current_throughput = #{record.currentThroughput,jdbcType=VARCHAR},
          </if>
          <if test="record.maxThroughput != null">
            max_throughput = #{record.maxThroughput,jdbcType=VARCHAR},
          </if>
          <if test="record.eventCount != null">
            event_count = #{record.eventCount,jdbcType=VARCHAR},
          </if>
          <if test="record.averageThroughput != null">
            average_throughput = #{record.averageThroughput,jdbcType=VARCHAR},
          </if>
          <if test="record.runState != null">
            run_state = #{record.runState,jdbcType=INTEGER},
          </if>
          <if test="record.deleteFlag != null">
            delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.modifyTime != null">
            modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.eventGetTimer != null">
            event_get_timer = #{record.eventGetTimer,jdbcType=VARCHAR},
          </if>
          <if test="record.appendBatchAcceptedCount != null">
            append_batch_accepted_count = #{record.appendBatchAcceptedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.eventAcceptedCount != null">
            event_accepted_count = #{record.eventAcceptedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.appendReceivedCount != null">
            append_received_count = #{record.appendReceivedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.appendBatchReceivedCount != null">
            append_batch_received_count = #{record.appendBatchReceivedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.kafkaCommitTimer != null">
            kafka_commit_timer = #{record.kafkaCommitTimer,jdbcType=VARCHAR},
          </if>
          <if test="record.eventReceivedCount != null">
            event_received_count = #{record.eventReceivedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.appendAcceptedCount != null">
            append_accepted_count = #{record.appendAcceptedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.openConnectionCount != null">
            open_connection_count = #{record.openConnectionCount,jdbcType=VARCHAR},
          </if>
          <if test="record.kafkaEmptyCount != null">
            kafka_empty_count = #{record.kafkaEmptyCount,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qmtec.servicecore.entity.SourceInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_flume_sourcesInfo
    set component_name = #{componentName,jdbcType=VARCHAR},
      ip_addr = #{ipAddr,jdbcType=VARCHAR},
      current_throughput = #{currentThroughput,jdbcType=VARCHAR},
      max_throughput = #{maxThroughput,jdbcType=VARCHAR},
      event_count = #{eventCount,jdbcType=VARCHAR},
      average_throughput = #{averageThroughput,jdbcType=VARCHAR},
      run_state = #{runState,jdbcType=INTEGER},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      event_get_timer = #{eventGetTimer,jdbcType=VARCHAR},
      append_batch_accepted_count = #{appendBatchAcceptedCount,jdbcType=VARCHAR},
      event_accepted_count = #{eventAcceptedCount,jdbcType=VARCHAR},
      append_received_count = #{appendReceivedCount,jdbcType=VARCHAR},
      append_batch_received_count = #{appendBatchReceivedCount,jdbcType=VARCHAR},
      kafka_commit_timer = #{kafkaCommitTimer,jdbcType=VARCHAR},
      event_received_count = #{eventReceivedCount,jdbcType=VARCHAR},
      append_accepted_count = #{appendAcceptedCount,jdbcType=VARCHAR},
      open_connection_count = #{openConnectionCount,jdbcType=VARCHAR},
      kafka_empty_count = #{kafkaEmptyCount,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectOneByExample" parameterType="com.qmtec.servicecore.entity.example.SourceInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_flume_sourcesInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_flume_sourcesInfo
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>