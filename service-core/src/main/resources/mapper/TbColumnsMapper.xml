<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qmtec.servicecore.dao.TbColumnsMapper">
  <resultMap id="BaseResultMap" type="com.qmtec.servicecore.entity.TbColumns">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="CD_ID" jdbcType="BIGINT" property="cdId" />
    <id column="COLUMN_NAME" jdbcType="VARCHAR" property="columnName" />
    <result column="COMMENT" jdbcType="VARCHAR" property="comment" />
    <result column="INTEGER_IDX" jdbcType="INTEGER" property="integerIdx" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.qmtec.servicecore.entity.TbColumns">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="TYPE_NAME" jdbcType="LONGVARCHAR" property="typeName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    CD_ID, `COLUMN_NAME`, `COMMENT`, INTEGER_IDX
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    TYPE_NAME
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.qmtec.servicecore.entity.example.TbColumnsExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from COLUMNS_V2
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.qmtec.servicecore.entity.example.TbColumnsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from COLUMNS_V2
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from COLUMNS_V2
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from COLUMNS_V2
    where CD_ID = #{cdId,jdbcType=BIGINT}
      and `COLUMN_NAME` = #{columnName,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from COLUMNS_V2
    where CD_ID = #{cdId,jdbcType=BIGINT}
      and `COLUMN_NAME` = #{columnName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from COLUMNS_V2
    where CD_ID = #{cdId,jdbcType=BIGINT}
      and `COLUMN_NAME` = #{columnName,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qmtec.servicecore.entity.example.TbColumnsExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from COLUMNS_V2
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qmtec.servicecore.entity.TbColumns">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into COLUMNS_V2 (CD_ID, `COLUMN_NAME`, `COMMENT`, 
      INTEGER_IDX, TYPE_NAME)
    values (#{cdId,jdbcType=BIGINT}, #{columnName,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, 
      #{integerIdx,jdbcType=INTEGER}, #{typeName,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into COLUMNS_V2
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.cdId != null">
            CD_ID,
          </if>
          <if test="record.columnName != null">
            `COLUMN_NAME`,
          </if>
          <if test="record.comment != null">
            `COMMENT`,
          </if>
          <if test="record.integerIdx != null">
            INTEGER_IDX,
          </if>
          <if test="record.typeName != null">
            TYPE_NAME,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.cdId != null">
            #{record.cdId,jdbcType=BIGINT},
          </if>
          <if test="record.columnName != null">
            #{record.columnName,jdbcType=VARCHAR},
          </if>
          <if test="record.comment != null">
            #{record.comment,jdbcType=VARCHAR},
          </if>
          <if test="record.integerIdx != null">
            #{record.integerIdx,jdbcType=INTEGER},
          </if>
          <if test="record.typeName != null">
            #{record.typeName,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.qmtec.servicecore.entity.example.TbColumnsExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from COLUMNS_V2
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update COLUMNS_V2
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.cdId != null">
            CD_ID = #{record.cdId,jdbcType=BIGINT},
          </if>
          <if test="record.columnName != null">
            `COLUMN_NAME` = #{record.columnName,jdbcType=VARCHAR},
          </if>
          <if test="record.comment != null">
            `COMMENT` = #{record.comment,jdbcType=VARCHAR},
          </if>
          <if test="record.integerIdx != null">
            INTEGER_IDX = #{record.integerIdx,jdbcType=INTEGER},
          </if>
          <if test="record.typeName != null">
            TYPE_NAME = #{record.typeName,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update COLUMNS_V2
    set CD_ID = #{record.cdId,jdbcType=BIGINT},
      `COLUMN_NAME` = #{record.columnName,jdbcType=VARCHAR},
      `COMMENT` = #{record.comment,jdbcType=VARCHAR},
      INTEGER_IDX = #{record.integerIdx,jdbcType=INTEGER},
      TYPE_NAME = #{record.typeName,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update COLUMNS_V2
    set CD_ID = #{record.cdId,jdbcType=BIGINT},
      `COLUMN_NAME` = #{record.columnName,jdbcType=VARCHAR},
      `COMMENT` = #{record.comment,jdbcType=VARCHAR},
      INTEGER_IDX = #{record.integerIdx,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update COLUMNS_V2
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.comment != null">
            `COMMENT` = #{record.comment,jdbcType=VARCHAR},
          </if>
          <if test="record.integerIdx != null">
            INTEGER_IDX = #{record.integerIdx,jdbcType=INTEGER},
          </if>
          <if test="record.typeName != null">
            TYPE_NAME = #{record.typeName,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where CD_ID = #{record.cdId,jdbcType=BIGINT}
      and `COLUMN_NAME` = #{record.columnName,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qmtec.servicecore.entity.TbColumns">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update COLUMNS_V2
    set `COMMENT` = #{comment,jdbcType=VARCHAR},
      INTEGER_IDX = #{integerIdx,jdbcType=INTEGER},
      TYPE_NAME = #{typeName,jdbcType=LONGVARCHAR}
    where CD_ID = #{cdId,jdbcType=BIGINT}
      and `COLUMN_NAME` = #{columnName,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qmtec.servicecore.entity.TbColumns">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update COLUMNS_V2
    set `COMMENT` = #{comment,jdbcType=VARCHAR},
      INTEGER_IDX = #{integerIdx,jdbcType=INTEGER}
    where CD_ID = #{cdId,jdbcType=BIGINT}
      and `COLUMN_NAME` = #{columnName,jdbcType=VARCHAR}
  </update>
  <select id="selectOneByExample" parameterType="com.qmtec.servicecore.entity.example.TbColumnsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from COLUMNS_V2
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleWithBLOBs" parameterType="com.qmtec.servicecore.entity.example.TbColumnsExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from COLUMNS_V2
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from COLUMNS_V2
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>