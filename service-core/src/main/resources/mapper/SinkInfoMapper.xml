<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qmtec.servicecore.dao.SinkInfoMapper">
  <resultMap id="BaseResultMap" type="com.qmtec.servicecore.entity.SinkInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="component_name" jdbcType="VARCHAR" property="componentName" />
    <result column="ip_addr" jdbcType="VARCHAR" property="ipAddr" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="connection_created_count" jdbcType="VARCHAR" property="connectionCreatedCount" />
    <result column="batch_complete_count" jdbcType="VARCHAR" property="batchCompleteCount" />
    <result column="batch_empty_count" jdbcType="VARCHAR" property="batchEmptyCount" />
    <result column="event_drainAttempt_count" jdbcType="VARCHAR" property="eventDrainattemptCount" />
    <result column="batch_underflow_count" jdbcType="VARCHAR" property="batchUnderflowCount" />
    <result column="connection_failed_count" jdbcType="VARCHAR" property="connectionFailedCount" />
    <result column="connection_closed_count" jdbcType="VARCHAR" property="connectionClosedCount" />
    <result column="rollback_count" jdbcType="VARCHAR" property="rollbackCount" />
    <result column="event_drain_success_count" jdbcType="VARCHAR" property="eventDrainSuccessCount" />
    <result column="kafka_event_sendTimer" jdbcType="VARCHAR" property="kafkaEventSendtimer" />
    <result column="run_state" jdbcType="INTEGER" property="runState" />
    <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="event_write_fail" jdbcType="VARCHAR" property="eventWriteFail" />
    <result column="channel_read_fail" jdbcType="VARCHAR" property="channelReadFail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, component_name, ip_addr, start_time, connection_created_count, batch_complete_count, 
    batch_empty_count, event_drainAttempt_count, batch_underflow_count, connection_failed_count, 
    connection_closed_count, rollback_count, event_drain_success_count, kafka_event_sendTimer, 
    run_state, delete_flag, create_time, modify_time, event_write_fail, channel_read_fail
  </sql>
  <select id="selectByExample" parameterType="com.qmtec.servicecore.entity.example.SinkInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_flume_sinkInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_flume_sinkInfo
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_flume_sinkInfo
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_flume_sinkInfo
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_flume_sinkInfo
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qmtec.servicecore.entity.example.SinkInfoExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_flume_sinkInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qmtec.servicecore.entity.SinkInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_flume_sinkInfo (id, component_name, ip_addr, 
      start_time, connection_created_count, batch_complete_count, 
      batch_empty_count, event_drainAttempt_count, 
      batch_underflow_count, connection_failed_count, 
      connection_closed_count, rollback_count, event_drain_success_count, 
      kafka_event_sendTimer, run_state, delete_flag, 
      create_time, modify_time, event_write_fail, 
      channel_read_fail)
    values (#{id,jdbcType=VARCHAR}, #{componentName,jdbcType=VARCHAR}, #{ipAddr,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{connectionCreatedCount,jdbcType=VARCHAR}, #{batchCompleteCount,jdbcType=VARCHAR}, 
      #{batchEmptyCount,jdbcType=VARCHAR}, #{eventDrainattemptCount,jdbcType=VARCHAR}, 
      #{batchUnderflowCount,jdbcType=VARCHAR}, #{connectionFailedCount,jdbcType=VARCHAR}, 
      #{connectionClosedCount,jdbcType=VARCHAR}, #{rollbackCount,jdbcType=VARCHAR}, #{eventDrainSuccessCount,jdbcType=VARCHAR}, 
      #{kafkaEventSendtimer,jdbcType=VARCHAR}, #{runState,jdbcType=INTEGER}, #{deleteFlag,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{eventWriteFail,jdbcType=VARCHAR}, 
      #{channelReadFail,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_flume_sinkInfo
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.componentName != null">
            component_name,
          </if>
          <if test="record.ipAddr != null">
            ip_addr,
          </if>
          <if test="record.startTime != null">
            start_time,
          </if>
          <if test="record.connectionCreatedCount != null">
            connection_created_count,
          </if>
          <if test="record.batchCompleteCount != null">
            batch_complete_count,
          </if>
          <if test="record.batchEmptyCount != null">
            batch_empty_count,
          </if>
          <if test="record.eventDrainattemptCount != null">
            event_drainAttempt_count,
          </if>
          <if test="record.batchUnderflowCount != null">
            batch_underflow_count,
          </if>
          <if test="record.connectionFailedCount != null">
            connection_failed_count,
          </if>
          <if test="record.connectionClosedCount != null">
            connection_closed_count,
          </if>
          <if test="record.rollbackCount != null">
            rollback_count,
          </if>
          <if test="record.eventDrainSuccessCount != null">
            event_drain_success_count,
          </if>
          <if test="record.kafkaEventSendtimer != null">
            kafka_event_sendTimer,
          </if>
          <if test="record.runState != null">
            run_state,
          </if>
          <if test="record.deleteFlag != null">
            delete_flag,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.modifyTime != null">
            modify_time,
          </if>
          <if test="record.eventWriteFail != null">
            event_write_fail,
          </if>
          <if test="record.channelReadFail != null">
            channel_read_fail,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=VARCHAR},
          </if>
          <if test="record.componentName != null">
            #{record.componentName,jdbcType=VARCHAR},
          </if>
          <if test="record.ipAddr != null">
            #{record.ipAddr,jdbcType=VARCHAR},
          </if>
          <if test="record.startTime != null">
            #{record.startTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.connectionCreatedCount != null">
            #{record.connectionCreatedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.batchCompleteCount != null">
            #{record.batchCompleteCount,jdbcType=VARCHAR},
          </if>
          <if test="record.batchEmptyCount != null">
            #{record.batchEmptyCount,jdbcType=VARCHAR},
          </if>
          <if test="record.eventDrainattemptCount != null">
            #{record.eventDrainattemptCount,jdbcType=VARCHAR},
          </if>
          <if test="record.batchUnderflowCount != null">
            #{record.batchUnderflowCount,jdbcType=VARCHAR},
          </if>
          <if test="record.connectionFailedCount != null">
            #{record.connectionFailedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.connectionClosedCount != null">
            #{record.connectionClosedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.rollbackCount != null">
            #{record.rollbackCount,jdbcType=VARCHAR},
          </if>
          <if test="record.eventDrainSuccessCount != null">
            #{record.eventDrainSuccessCount,jdbcType=VARCHAR},
          </if>
          <if test="record.kafkaEventSendtimer != null">
            #{record.kafkaEventSendtimer,jdbcType=VARCHAR},
          </if>
          <if test="record.runState != null">
            #{record.runState,jdbcType=INTEGER},
          </if>
          <if test="record.deleteFlag != null">
            #{record.deleteFlag,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.modifyTime != null">
            #{record.modifyTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.eventWriteFail != null">
            #{record.eventWriteFail,jdbcType=VARCHAR},
          </if>
          <if test="record.channelReadFail != null">
            #{record.channelReadFail,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.qmtec.servicecore.entity.example.SinkInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from t_flume_sinkInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_flume_sinkInfo
    SET
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=VARCHAR},
          </if>
          <if test="record.componentName != null">
            component_name = #{record.componentName,jdbcType=VARCHAR},
          </if>
          <if test="record.ipAddr != null">
            ip_addr = #{record.ipAddr,jdbcType=VARCHAR},
          </if>
          <if test="record.startTime != null">
            start_time = #{record.startTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.connectionCreatedCount != null">
            connection_created_count = #{record.connectionCreatedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.batchCompleteCount != null">
            batch_complete_count = #{record.batchCompleteCount,jdbcType=VARCHAR},
          </if>
          <if test="record.batchEmptyCount != null">
            batch_empty_count = #{record.batchEmptyCount,jdbcType=VARCHAR},
          </if>
          <if test="record.eventDrainattemptCount != null">
            event_drainAttempt_count = #{record.eventDrainattemptCount,jdbcType=VARCHAR},
          </if>
          <if test="record.batchUnderflowCount != null">
            batch_underflow_count = #{record.batchUnderflowCount,jdbcType=VARCHAR},
          </if>
          <if test="record.connectionFailedCount != null">
            connection_failed_count = #{record.connectionFailedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.connectionClosedCount != null">
            connection_closed_count = #{record.connectionClosedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.rollbackCount != null">
            rollback_count = #{record.rollbackCount,jdbcType=VARCHAR},
          </if>
          <if test="record.eventDrainSuccessCount != null">
            event_drain_success_count = #{record.eventDrainSuccessCount,jdbcType=VARCHAR},
          </if>
          <if test="record.kafkaEventSendtimer != null">
            kafka_event_sendTimer = #{record.kafkaEventSendtimer,jdbcType=VARCHAR},
          </if>
          <if test="record.runState != null">
            run_state = #{record.runState,jdbcType=INTEGER},
          </if>
          <if test="record.deleteFlag != null">
            delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.modifyTime != null">
            modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.eventWriteFail != null">
            event_write_fail = #{record.eventWriteFail,jdbcType=VARCHAR},
          </if>
          <if test="record.channelReadFail != null">
            channel_read_fail = #{record.channelReadFail,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_flume_sinkInfo
    set id = #{record.id,jdbcType=VARCHAR},
      component_name = #{record.componentName,jdbcType=VARCHAR},
      ip_addr = #{record.ipAddr,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      connection_created_count = #{record.connectionCreatedCount,jdbcType=VARCHAR},
      batch_complete_count = #{record.batchCompleteCount,jdbcType=VARCHAR},
      batch_empty_count = #{record.batchEmptyCount,jdbcType=VARCHAR},
      event_drainAttempt_count = #{record.eventDrainattemptCount,jdbcType=VARCHAR},
      batch_underflow_count = #{record.batchUnderflowCount,jdbcType=VARCHAR},
      connection_failed_count = #{record.connectionFailedCount,jdbcType=VARCHAR},
      connection_closed_count = #{record.connectionClosedCount,jdbcType=VARCHAR},
      rollback_count = #{record.rollbackCount,jdbcType=VARCHAR},
      event_drain_success_count = #{record.eventDrainSuccessCount,jdbcType=VARCHAR},
      kafka_event_sendTimer = #{record.kafkaEventSendtimer,jdbcType=VARCHAR},
      run_state = #{record.runState,jdbcType=INTEGER},
      delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      event_write_fail = #{record.eventWriteFail,jdbcType=VARCHAR},
      channel_read_fail = #{record.channelReadFail,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_flume_sinkInfo
    SET
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.componentName != null">
            component_name = #{record.componentName,jdbcType=VARCHAR},
          </if>
          <if test="record.ipAddr != null">
            ip_addr = #{record.ipAddr,jdbcType=VARCHAR},
          </if>
          <if test="record.startTime != null">
            start_time = #{record.startTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.connectionCreatedCount != null">
            connection_created_count = #{record.connectionCreatedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.batchCompleteCount != null">
            batch_complete_count = #{record.batchCompleteCount,jdbcType=VARCHAR},
          </if>
          <if test="record.batchEmptyCount != null">
            batch_empty_count = #{record.batchEmptyCount,jdbcType=VARCHAR},
          </if>
          <if test="record.eventDrainattemptCount != null">
            event_drainAttempt_count = #{record.eventDrainattemptCount,jdbcType=VARCHAR},
          </if>
          <if test="record.batchUnderflowCount != null">
            batch_underflow_count = #{record.batchUnderflowCount,jdbcType=VARCHAR},
          </if>
          <if test="record.connectionFailedCount != null">
            connection_failed_count = #{record.connectionFailedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.connectionClosedCount != null">
            connection_closed_count = #{record.connectionClosedCount,jdbcType=VARCHAR},
          </if>
          <if test="record.rollbackCount != null">
            rollback_count = #{record.rollbackCount,jdbcType=VARCHAR},
          </if>
          <if test="record.eventDrainSuccessCount != null">
            event_drain_success_count = #{record.eventDrainSuccessCount,jdbcType=VARCHAR},
          </if>
          <if test="record.kafkaEventSendtimer != null">
            kafka_event_sendTimer = #{record.kafkaEventSendtimer,jdbcType=VARCHAR},
          </if>
          <if test="record.runState != null">
            run_state = #{record.runState,jdbcType=INTEGER},
          </if>
          <if test="record.deleteFlag != null">
            delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.modifyTime != null">
            modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.eventWriteFail != null">
            event_write_fail = #{record.eventWriteFail,jdbcType=VARCHAR},
          </if>
          <if test="record.channelReadFail != null">
            channel_read_fail = #{record.channelReadFail,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qmtec.servicecore.entity.SinkInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_flume_sinkInfo
    set component_name = #{componentName,jdbcType=VARCHAR},
      ip_addr = #{ipAddr,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      connection_created_count = #{connectionCreatedCount,jdbcType=VARCHAR},
      batch_complete_count = #{batchCompleteCount,jdbcType=VARCHAR},
      batch_empty_count = #{batchEmptyCount,jdbcType=VARCHAR},
      event_drainAttempt_count = #{eventDrainattemptCount,jdbcType=VARCHAR},
      batch_underflow_count = #{batchUnderflowCount,jdbcType=VARCHAR},
      connection_failed_count = #{connectionFailedCount,jdbcType=VARCHAR},
      connection_closed_count = #{connectionClosedCount,jdbcType=VARCHAR},
      rollback_count = #{rollbackCount,jdbcType=VARCHAR},
      event_drain_success_count = #{eventDrainSuccessCount,jdbcType=VARCHAR},
      kafka_event_sendTimer = #{kafkaEventSendtimer,jdbcType=VARCHAR},
      run_state = #{runState,jdbcType=INTEGER},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      event_write_fail = #{eventWriteFail,jdbcType=VARCHAR},
      channel_read_fail = #{channelReadFail,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectOneByExample" parameterType="com.qmtec.servicecore.entity.example.SinkInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_flume_sinkInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_flume_sinkInfo
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>