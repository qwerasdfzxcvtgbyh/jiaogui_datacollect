<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qmtec.servicecore.dao.TbIDXSMapper">
  <resultMap id="BaseResultMap" type="com.qmtec.servicecore.entity.TbIDXS">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="INDEX_ID" jdbcType="BIGINT" property="indexId" />
    <result column="CREATE_TIME" jdbcType="INTEGER" property="createTime" />
    <result column="DEFERRED_REBUILD" jdbcType="BIT" property="deferredRebuild" />
    <result column="INDEX_HANDLER_CLASS" jdbcType="VARCHAR" property="indexHandlerClass" />
    <result column="INDEX_NAME" jdbcType="VARCHAR" property="indexName" />
    <result column="INDEX_TBL_ID" jdbcType="BIGINT" property="indexTblId" />
    <result column="LAST_ACCESS_TIME" jdbcType="INTEGER" property="lastAccessTime" />
    <result column="ORIG_TBL_ID" jdbcType="BIGINT" property="origTblId" />
    <result column="SD_ID" jdbcType="BIGINT" property="sdId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    INDEX_ID, CREATE_TIME, DEFERRED_REBUILD, INDEX_HANDLER_CLASS, INDEX_NAME, INDEX_TBL_ID, 
    LAST_ACCESS_TIME, ORIG_TBL_ID, SD_ID
  </sql>
  <select id="selectByExample" parameterType="com.qmtec.servicecore.entity.example.TbIDXSExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from IDXS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from IDXS
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from IDXS
    where INDEX_ID = #{indexId,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from IDXS
    where INDEX_ID = #{indexId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from IDXS
    where INDEX_ID = #{indexId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qmtec.servicecore.entity.example.TbIDXSExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from IDXS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qmtec.servicecore.entity.TbIDXS">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into IDXS (INDEX_ID, CREATE_TIME, DEFERRED_REBUILD, 
      INDEX_HANDLER_CLASS, INDEX_NAME, INDEX_TBL_ID, 
      LAST_ACCESS_TIME, ORIG_TBL_ID, SD_ID
      )
    values (#{indexId,jdbcType=BIGINT}, #{createTime,jdbcType=INTEGER}, #{deferredRebuild,jdbcType=BIT}, 
      #{indexHandlerClass,jdbcType=VARCHAR}, #{indexName,jdbcType=VARCHAR}, #{indexTblId,jdbcType=BIGINT}, 
      #{lastAccessTime,jdbcType=INTEGER}, #{origTblId,jdbcType=BIGINT}, #{sdId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into IDXS
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.indexId != null">
            INDEX_ID,
          </if>
          <if test="record.createTime != null">
            CREATE_TIME,
          </if>
          <if test="record.deferredRebuild != null">
            DEFERRED_REBUILD,
          </if>
          <if test="record.indexHandlerClass != null">
            INDEX_HANDLER_CLASS,
          </if>
          <if test="record.indexName != null">
            INDEX_NAME,
          </if>
          <if test="record.indexTblId != null">
            INDEX_TBL_ID,
          </if>
          <if test="record.lastAccessTime != null">
            LAST_ACCESS_TIME,
          </if>
          <if test="record.origTblId != null">
            ORIG_TBL_ID,
          </if>
          <if test="record.sdId != null">
            SD_ID,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.indexId != null">
            #{record.indexId,jdbcType=BIGINT},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=INTEGER},
          </if>
          <if test="record.deferredRebuild != null">
            #{record.deferredRebuild,jdbcType=BIT},
          </if>
          <if test="record.indexHandlerClass != null">
            #{record.indexHandlerClass,jdbcType=VARCHAR},
          </if>
          <if test="record.indexName != null">
            #{record.indexName,jdbcType=VARCHAR},
          </if>
          <if test="record.indexTblId != null">
            #{record.indexTblId,jdbcType=BIGINT},
          </if>
          <if test="record.lastAccessTime != null">
            #{record.lastAccessTime,jdbcType=INTEGER},
          </if>
          <if test="record.origTblId != null">
            #{record.origTblId,jdbcType=BIGINT},
          </if>
          <if test="record.sdId != null">
            #{record.sdId,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.qmtec.servicecore.entity.example.TbIDXSExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from IDXS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update IDXS
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.indexId != null">
            INDEX_ID = #{record.indexId,jdbcType=BIGINT},
          </if>
          <if test="record.createTime != null">
            CREATE_TIME = #{record.createTime,jdbcType=INTEGER},
          </if>
          <if test="record.deferredRebuild != null">
            DEFERRED_REBUILD = #{record.deferredRebuild,jdbcType=BIT},
          </if>
          <if test="record.indexHandlerClass != null">
            INDEX_HANDLER_CLASS = #{record.indexHandlerClass,jdbcType=VARCHAR},
          </if>
          <if test="record.indexName != null">
            INDEX_NAME = #{record.indexName,jdbcType=VARCHAR},
          </if>
          <if test="record.indexTblId != null">
            INDEX_TBL_ID = #{record.indexTblId,jdbcType=BIGINT},
          </if>
          <if test="record.lastAccessTime != null">
            LAST_ACCESS_TIME = #{record.lastAccessTime,jdbcType=INTEGER},
          </if>
          <if test="record.origTblId != null">
            ORIG_TBL_ID = #{record.origTblId,jdbcType=BIGINT},
          </if>
          <if test="record.sdId != null">
            SD_ID = #{record.sdId,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update IDXS
    set INDEX_ID = #{record.indexId,jdbcType=BIGINT},
      CREATE_TIME = #{record.createTime,jdbcType=INTEGER},
      DEFERRED_REBUILD = #{record.deferredRebuild,jdbcType=BIT},
      INDEX_HANDLER_CLASS = #{record.indexHandlerClass,jdbcType=VARCHAR},
      INDEX_NAME = #{record.indexName,jdbcType=VARCHAR},
      INDEX_TBL_ID = #{record.indexTblId,jdbcType=BIGINT},
      LAST_ACCESS_TIME = #{record.lastAccessTime,jdbcType=INTEGER},
      ORIG_TBL_ID = #{record.origTblId,jdbcType=BIGINT},
      SD_ID = #{record.sdId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update IDXS
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.createTime != null">
            CREATE_TIME = #{record.createTime,jdbcType=INTEGER},
          </if>
          <if test="record.deferredRebuild != null">
            DEFERRED_REBUILD = #{record.deferredRebuild,jdbcType=BIT},
          </if>
          <if test="record.indexHandlerClass != null">
            INDEX_HANDLER_CLASS = #{record.indexHandlerClass,jdbcType=VARCHAR},
          </if>
          <if test="record.indexName != null">
            INDEX_NAME = #{record.indexName,jdbcType=VARCHAR},
          </if>
          <if test="record.indexTblId != null">
            INDEX_TBL_ID = #{record.indexTblId,jdbcType=BIGINT},
          </if>
          <if test="record.lastAccessTime != null">
            LAST_ACCESS_TIME = #{record.lastAccessTime,jdbcType=INTEGER},
          </if>
          <if test="record.origTblId != null">
            ORIG_TBL_ID = #{record.origTblId,jdbcType=BIGINT},
          </if>
          <if test="record.sdId != null">
            SD_ID = #{record.sdId,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    where INDEX_ID = #{record.indexId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qmtec.servicecore.entity.TbIDXS">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update IDXS
    set CREATE_TIME = #{createTime,jdbcType=INTEGER},
      DEFERRED_REBUILD = #{deferredRebuild,jdbcType=BIT},
      INDEX_HANDLER_CLASS = #{indexHandlerClass,jdbcType=VARCHAR},
      INDEX_NAME = #{indexName,jdbcType=VARCHAR},
      INDEX_TBL_ID = #{indexTblId,jdbcType=BIGINT},
      LAST_ACCESS_TIME = #{lastAccessTime,jdbcType=INTEGER},
      ORIG_TBL_ID = #{origTblId,jdbcType=BIGINT},
      SD_ID = #{sdId,jdbcType=BIGINT}
    where INDEX_ID = #{indexId,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.qmtec.servicecore.entity.example.TbIDXSExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from IDXS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from IDXS
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>