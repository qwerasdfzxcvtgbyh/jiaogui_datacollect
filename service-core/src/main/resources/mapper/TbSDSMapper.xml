<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qmtec.servicecore.dao.TbSDSMapper">
  <resultMap id="BaseResultMap" type="com.qmtec.servicecore.entity.TbSDS">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="SD_ID" jdbcType="BIGINT" property="sdId" />
    <result column="CD_ID" jdbcType="BIGINT" property="cdId" />
    <result column="INPUT_FORMAT" jdbcType="VARCHAR" property="inputFormat" />
    <result column="IS_COMPRESSED" jdbcType="BIT" property="isCompressed" />
    <result column="IS_STOREDASSUBDIRECTORIES" jdbcType="BIT" property="isStoredassubdirectories" />
    <result column="LOCATION" jdbcType="VARCHAR" property="location" />
    <result column="NUM_BUCKETS" jdbcType="INTEGER" property="numBuckets" />
    <result column="OUTPUT_FORMAT" jdbcType="VARCHAR" property="outputFormat" />
    <result column="SERDE_ID" jdbcType="BIGINT" property="serdeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    SD_ID, CD_ID, INPUT_FORMAT, IS_COMPRESSED, IS_STOREDASSUBDIRECTORIES, `LOCATION`, 
    NUM_BUCKETS, OUTPUT_FORMAT, SERDE_ID
  </sql>
  <select id="selectByExample" parameterType="com.qmtec.servicecore.entity.example.TbSDSExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from SDS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from SDS
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from SDS
    where SD_ID = #{sdId,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from SDS
    where SD_ID = #{sdId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from SDS
    where SD_ID = #{sdId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qmtec.servicecore.entity.example.TbSDSExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from SDS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qmtec.servicecore.entity.TbSDS">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into SDS (SD_ID, CD_ID, INPUT_FORMAT, 
      IS_COMPRESSED, IS_STOREDASSUBDIRECTORIES, `LOCATION`, 
      NUM_BUCKETS, OUTPUT_FORMAT, SERDE_ID
      )
    values (#{sdId,jdbcType=BIGINT}, #{cdId,jdbcType=BIGINT}, #{inputFormat,jdbcType=VARCHAR}, 
      #{isCompressed,jdbcType=BIT}, #{isStoredassubdirectories,jdbcType=BIT}, #{location,jdbcType=VARCHAR}, 
      #{numBuckets,jdbcType=INTEGER}, #{outputFormat,jdbcType=VARCHAR}, #{serdeId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into SDS
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.sdId != null">
            SD_ID,
          </if>
          <if test="record.cdId != null">
            CD_ID,
          </if>
          <if test="record.inputFormat != null">
            INPUT_FORMAT,
          </if>
          <if test="record.isCompressed != null">
            IS_COMPRESSED,
          </if>
          <if test="record.isStoredassubdirectories != null">
            IS_STOREDASSUBDIRECTORIES,
          </if>
          <if test="record.location != null">
            `LOCATION`,
          </if>
          <if test="record.numBuckets != null">
            NUM_BUCKETS,
          </if>
          <if test="record.outputFormat != null">
            OUTPUT_FORMAT,
          </if>
          <if test="record.serdeId != null">
            SERDE_ID,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.sdId != null">
            #{record.sdId,jdbcType=BIGINT},
          </if>
          <if test="record.cdId != null">
            #{record.cdId,jdbcType=BIGINT},
          </if>
          <if test="record.inputFormat != null">
            #{record.inputFormat,jdbcType=VARCHAR},
          </if>
          <if test="record.isCompressed != null">
            #{record.isCompressed,jdbcType=BIT},
          </if>
          <if test="record.isStoredassubdirectories != null">
            #{record.isStoredassubdirectories,jdbcType=BIT},
          </if>
          <if test="record.location != null">
            #{record.location,jdbcType=VARCHAR},
          </if>
          <if test="record.numBuckets != null">
            #{record.numBuckets,jdbcType=INTEGER},
          </if>
          <if test="record.outputFormat != null">
            #{record.outputFormat,jdbcType=VARCHAR},
          </if>
          <if test="record.serdeId != null">
            #{record.serdeId,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.qmtec.servicecore.entity.example.TbSDSExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from SDS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update SDS
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.sdId != null">
            SD_ID = #{record.sdId,jdbcType=BIGINT},
          </if>
          <if test="record.cdId != null">
            CD_ID = #{record.cdId,jdbcType=BIGINT},
          </if>
          <if test="record.inputFormat != null">
            INPUT_FORMAT = #{record.inputFormat,jdbcType=VARCHAR},
          </if>
          <if test="record.isCompressed != null">
            IS_COMPRESSED = #{record.isCompressed,jdbcType=BIT},
          </if>
          <if test="record.isStoredassubdirectories != null">
            IS_STOREDASSUBDIRECTORIES = #{record.isStoredassubdirectories,jdbcType=BIT},
          </if>
          <if test="record.location != null">
            `LOCATION` = #{record.location,jdbcType=VARCHAR},
          </if>
          <if test="record.numBuckets != null">
            NUM_BUCKETS = #{record.numBuckets,jdbcType=INTEGER},
          </if>
          <if test="record.outputFormat != null">
            OUTPUT_FORMAT = #{record.outputFormat,jdbcType=VARCHAR},
          </if>
          <if test="record.serdeId != null">
            SERDE_ID = #{record.serdeId,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update SDS
    set SD_ID = #{record.sdId,jdbcType=BIGINT},
      CD_ID = #{record.cdId,jdbcType=BIGINT},
      INPUT_FORMAT = #{record.inputFormat,jdbcType=VARCHAR},
      IS_COMPRESSED = #{record.isCompressed,jdbcType=BIT},
      IS_STOREDASSUBDIRECTORIES = #{record.isStoredassubdirectories,jdbcType=BIT},
      `LOCATION` = #{record.location,jdbcType=VARCHAR},
      NUM_BUCKETS = #{record.numBuckets,jdbcType=INTEGER},
      OUTPUT_FORMAT = #{record.outputFormat,jdbcType=VARCHAR},
      SERDE_ID = #{record.serdeId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update SDS
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.cdId != null">
            CD_ID = #{record.cdId,jdbcType=BIGINT},
          </if>
          <if test="record.inputFormat != null">
            INPUT_FORMAT = #{record.inputFormat,jdbcType=VARCHAR},
          </if>
          <if test="record.isCompressed != null">
            IS_COMPRESSED = #{record.isCompressed,jdbcType=BIT},
          </if>
          <if test="record.isStoredassubdirectories != null">
            IS_STOREDASSUBDIRECTORIES = #{record.isStoredassubdirectories,jdbcType=BIT},
          </if>
          <if test="record.location != null">
            `LOCATION` = #{record.location,jdbcType=VARCHAR},
          </if>
          <if test="record.numBuckets != null">
            NUM_BUCKETS = #{record.numBuckets,jdbcType=INTEGER},
          </if>
          <if test="record.outputFormat != null">
            OUTPUT_FORMAT = #{record.outputFormat,jdbcType=VARCHAR},
          </if>
          <if test="record.serdeId != null">
            SERDE_ID = #{record.serdeId,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    where SD_ID = #{record.sdId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qmtec.servicecore.entity.TbSDS">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update SDS
    set CD_ID = #{cdId,jdbcType=BIGINT},
      INPUT_FORMAT = #{inputFormat,jdbcType=VARCHAR},
      IS_COMPRESSED = #{isCompressed,jdbcType=BIT},
      IS_STOREDASSUBDIRECTORIES = #{isStoredassubdirectories,jdbcType=BIT},
      `LOCATION` = #{location,jdbcType=VARCHAR},
      NUM_BUCKETS = #{numBuckets,jdbcType=INTEGER},
      OUTPUT_FORMAT = #{outputFormat,jdbcType=VARCHAR},
      SERDE_ID = #{serdeId,jdbcType=BIGINT}
    where SD_ID = #{sdId,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.qmtec.servicecore.entity.example.TbSDSExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from SDS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from SDS
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>